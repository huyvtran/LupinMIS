{"ast":null,"code":"var _jsxFileName = \"/home/user/REACT PROJECTS/LFMIS/LupinMIS/webApp/admin/src/coreAdmin/masterData/sectorMapping/SectorMapping.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport _ from 'underscore';\nimport IAssureTable from \"../../IAssureTable/IAssureTable.jsx\";\nimport \"./SectorMapping.css\";\naxios.defaults.baseURL = 'http://qalmisapi.iassureit.com';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nclass SectorMapping extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"goalName\": \"\",\n      \"goalType\": \"\",\n      \"sector\": \"\",\n      \"activity\": \"\",\n      \"uID\": \"\",\n      \"activityName\": \"\",\n      \"selectedActivities\": [],\n      fields: {},\n      errors: {},\n      \"tableHeading\": {\n        type: \"Type of Goal/Project\",\n        goal: \"Goal /Project Name\",\n        sectorName: \"Sector\",\n        activityName: \"Activity\",\n        actions: 'Action'\n      },\n      \"tableObjects\": {\n        deleteMethod: 'delete',\n        apiLink: '/api/sectorMappings/',\n        paginationApply: true,\n        searchApply: true,\n        editUrl: '/sector-mapping/'\n      },\n      \"startRange\": 0,\n      \"limitRange\": 10,\n      \"editId\": this.props.match.params ? this.props.match.params.sectorMappingId : ''\n    };\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({\n      \"goalName\": this.refs.goalName.value,\n      \"goalType\": this.refs.goalType.value,\n      \"selectedActivities\": this.state.selectedActivities\n    });\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      fields\n    });\n\n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n\n  isTextKey(evt) {\n    var charCode = evt.which ? evt.which : evt.keyCode;\n\n    if (charCode != 189 && charCode > 32 && (charCode < 65 || charCode > 90)) {\n      evt.preventDefault();\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  Submit(event) {\n    event.preventDefault();\n    var selectedActivities = this.state.selectedActivities;\n\n    if (this.validateFormReq() && this.validateForm()) {\n      if (this.state.selectedActivities == \"\") {\n        swal({\n          title: 'abc',\n          text: \"Please select any Activity\",\n          button: true\n        });\n      } else {\n        var mappingValues = {\n          \"goal\": this.refs.goalName.value,\n          \"type\": this.refs.goalType.value,\n          \"sector\": this.state.selectedActivities\n        };\n        let fields = {};\n        fields[\"goalName\"] = \"\";\n        fields[\"goalType\"] = \"\";\n        axios.post('/api/sectorMappings', mappingValues).then(response => {\n          swal({\n            title: response.data.message,\n            text: response.data.message\n          });\n          this.getData(this.state.startRange, this.state.limitRange);\n        }).catch(function (error) {\n          console.log(\"error = \", error);\n        });\n        selectedActivities.map((a, index) => {\n          this.setState({\n            [a.sector_ID + \"|\" + a.sectorName + \"|\" + a.activity_ID + \"|\" + a.activityName]: false\n          });\n        });\n        this.setState({\n          \"goalName\": \"\",\n          \"goalType\": \"\",\n          \"selectedActivities\": [],\n          fields: fields\n        });\n      }\n    }\n  }\n\n  Update(event) {\n    event.preventDefault();\n    var selectedActivities = this.state.selectedActivities;\n\n    if (this.refs.goalName.value == \"\" || this.refs.goalType.value == \"\") {\n      if (this.validateFormReq() && this.validateForm()) {}\n    } else {\n      var id2 = this.state.uID;\n      var mappingValues = {\n        \"sectorMapping_ID\": this.state.editId,\n        \"goal\": this.refs.goalName.value,\n        \"type\": this.refs.goalType.value,\n        \"sector\": this.state.selectedActivities\n      };\n      let fields = {};\n      fields[\"goalName\"] = \"\";\n      fields[\"goalType\"] = \"\";\n      axios.patch('/api/sectorMappings/update', mappingValues).then(response => {\n        swal({\n          title: response.data.message,\n          text: response.data.message\n        });\n        this.getData(this.state.startRange, this.state.limitRange);\n      }).catch(function (error) {\n        console.log(\"error = \", error);\n      });\n      selectedActivities.map((a, index) => {\n        this.setState({\n          [a.sector_ID + \"|\" + a.sectorName + \"|\" + a.activity_ID + \"|\" + a.activityName]: false\n        });\n      });\n      this.setState({\n        \"goalName\": \"\",\n        \"goalType\": \"\",\n        \"selectedActivities\": [],\n        fields: fields\n      });\n    }\n\n    this.props.history.push('/sector-mapping');\n    this.setState({\n      \"editId\": \"\"\n    });\n  }\n\n  validateFormReq() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n\n    if (!fields[\"goalName\"]) {\n      formIsValid = false;\n      errors[\"goalName\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"goalType\"]) {\n      formIsValid = false;\n      errors[\"goalType\"] = \"This field is required.\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var editId = nextProps.match.params.sectorMappingId;\n\n    if (nextProps.match.params.sectorMappingId) {\n      this.setState({\n        editId: editId,\n        editSectorId: nextProps.match.params.sectorId\n      }, () => {\n        this.edit(this.state.editId);\n      });\n      this.getAvailableSector(this.state.editId);\n    }\n\n    if (nextProps) {\n      this.getLength();\n    }\n  }\n\n  componentDidMount() {\n    var editId = this.props.match.params.sectorMappingId;\n\n    if (this.state.editId) {\n      this.edit(this.state.editId);\n    }\n\n    this.getLength();\n    this.getData(this.state.startRange, this.state.limitRange);\n    this.getAvailableSector(this.state.editSectorId);\n  }\n\n  edit(id) {\n    axios({\n      method: 'get',\n      url: '/api/sectorMappings/' + id\n    }).then(response => {\n      var editData = response.data[0];\n      editData.sector.map((a, i) => {\n        this.setState({\n          [a.sector_ID + \"|\" + a.sectorName + \"|\" + a.activity_ID + \"|\" + a.activityName]: true\n        }, () => {});\n      });\n      this.setState({\n        \"goalName\": editData.goal,\n        \"goalType\": editData.type,\n        \"selectedActivities\": editData.sector\n      });\n    }).catch(function (error) {});\n  }\n\n  getLength() {\n    axios.get('/api/sectorMappings/count').then(response => {\n      // console.log('response', response.data);\n      this.setState({\n        dataCount: response.data.dataLength\n      }, () => {\n        console.log('dataCount', this.state.dataCount);\n      });\n    }).catch(function (error) {});\n  }\n\n  getData(startRange, limitRange) {\n    var data = {\n      limitRange: limitRange,\n      startRange: startRange\n    };\n    axios.post('/api/sectorMappings/edit/list', data).then(response => {\n      this.setState({\n        tableData: response.data\n      });\n    }).catch(function (error) {});\n  }\n\n  selectActivity(event) {\n    var selectedActivities = this.state.selectedActivities;\n    var value = event.target.checked;\n    var id = event.target.id;\n    this.setState({\n      [id]: value\n    }, () => {\n      if (this.state[id] == true) {\n        selectedActivities.push({\n          \"sector_ID\": id.split(\"|\")[0],\n          \"sectorName\": id.split(\"|\")[1],\n          \"activity_ID\": id.split(\"|\")[2],\n          \"activityName\": id.split(\"|\")[3]\n        });\n        this.setState({\n          selectedActivities: selectedActivities\n        });\n      } else {\n        var index = selectedActivities.findIndex(v => v.activityName === id);\n        selectedActivities.splice(selectedActivities.findIndex(v => v.activityName === id), 1);\n        this.setState({\n          selectedActivities: selectedActivities\n        });\n      }\n    });\n  }\n\n  getAvailableSector() {\n    axios({\n      method: 'get',\n      url: '/api/sectors/list'\n    }).then(response => {\n      this.setState({\n        availableSectors: response.data\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  getSearchText(searchText, startRange, limitRange) {\n    this.setState({\n      tableData: []\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"formWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 titleaddcontact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 contactdeilsmg pageHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Master Data\"), React.createElement(\"hr\", {\n      className: \"hr-head container-fluid row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 formLable\",\n      id: \"sectorMapping\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"pageSubHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Sector Mapping\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12 formLable valid_box \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-4 col-sm-6 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Type of Goal/Project\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"goalType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"goalType\",\n      name: \"goalType\",\n      value: this.state.goalType,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"-- Select --\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"SDG Goal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"ADP Goal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Empowerment Line Goal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Project Name\"))), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, this.state.errors.goalType)), React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"Enter Goal / Project Name\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main \",\n      id: \"goalName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox\",\n      value: this.state.goalName,\n      onChange: this.handleChange.bind(this),\n      onKeyDown: this.isTextKey.bind(this),\n      placeholder: \"\",\n      name: \"goalName\",\n      ref: \"goalName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, this.state.errors.goalName)), React.createElement(\"div\", {\n      className: \" col-md-12 col-sm-6 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-lg-12 col-xs-12 col-sm-12 col-md-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"fbold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Please Select Activities to be mapped with above \", this.state.goalType)), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12 formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, this.state.availableSectors ? this.state.availableSectors.map((data, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \" col-md-4  col-lg-4 col-sm-12 col-xs-12 blockheight noPadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"formLable faintColor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, data.sector), data.activity.map((a, i) => {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"col-lg-12 col-sm-12 col-xs-12 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"actionDiv\",\n          id: \"activityName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"SDGContainer col-lg-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: \"activityName\",\n          className: \"activityName\",\n          id: data._id + \"|\" + data.sector + \"|\" + a._id + \"|\" + a.activityName,\n          checked: this.state[data._id + \"|\" + data.sector + \"|\" + a._id + \"|\" + a.activityName] ? true : false,\n          onChange: this.selectActivity.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"SDGCheck\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        }))), React.createElement(\"label\", {\n          className: \"listItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }, a.activityName)));\n      }));\n    }) : null)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, this.state.editId ? React.createElement(\"button\", {\n      className: \" col-lg-2 btn submit mt pull-right\",\n      onClick: this.Update.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \" Update \") : React.createElement(\"button\", {\n      className: \" col-lg-2 btn submit mt pull-right\",\n      onClick: this.Submit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \" Submit \"))), React.createElement(\"div\", {\n      className: \"col-lg-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(IAssureTable, {\n      tableHeading: this.state.tableHeading,\n      twoLevelHeader: this.state.twoLevelHeader,\n      dataCount: this.state.dataCount,\n      tableData: this.state.tableData,\n      getData: this.getData.bind(this),\n      tableObjects: this.state.tableObjects,\n      getSearchText: this.getSearchText.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default SectorMapping;","map":{"version":3,"sources":["/home/user/REACT PROJECTS/LFMIS/LupinMIS/webApp/admin/src/coreAdmin/masterData/sectorMapping/SectorMapping.js"],"names":["React","Component","$","axios","swal","_","IAssureTable","defaults","baseURL","headers","post","SectorMapping","constructor","props","state","fields","errors","type","goal","sectorName","activityName","actions","deleteMethod","apiLink","paginationApply","searchApply","editUrl","match","params","sectorMappingId","handleChange","event","preventDefault","setState","refs","goalName","value","goalType","selectedActivities","target","name","validateForm","isTextKey","evt","charCode","which","keyCode","Submit","validateFormReq","title","text","button","mappingValues","then","response","data","message","getData","startRange","limitRange","catch","error","console","log","map","a","index","sector_ID","activity_ID","Update","id2","uID","editId","patch","history","push","formIsValid","scrollTop","componentWillReceiveProps","nextProps","editSectorId","sectorId","edit","getAvailableSector","getLength","componentDidMount","id","method","url","editData","sector","i","get","dataCount","dataLength","tableData","selectActivity","checked","split","findIndex","v","splice","availableSectors","getSearchText","searchText","render","bind","activity","_id","tableHeading","twoLevelHeader","tableObjects"],"mappings":"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","sourcesContent":["import React, { Component }   from 'react';\nimport $                      from 'jquery';\nimport axios                  from 'axios';\nimport swal                   from 'sweetalert';\nimport _                      from 'underscore';\n\nimport IAssureTable           from \"../../IAssureTable/IAssureTable.jsx\";\nimport \"./SectorMapping.css\";\n\naxios.defaults.baseURL = 'http://qalmisapi.iassureit.com';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nclass SectorMapping extends Component{\n  \n  constructor(props){\n    super(props);\n   \n    this.state = {\n      \"goalName\"           : \"\",\n      \"goalType\"           : \"\",\n      \"sector\"             : \"\",\n      \"activity\"           : \"\",\n      \"uID\"                : \"\",\n      \"activityName\"       : \"\",\n      \"selectedActivities\" : [],\n      fields               : {},\n      errors               : {},\n      \"tableHeading\"       : {\n        type               : \"Type of Goal/Project\",\n        goal               : \"Goal /Project Name\",\n        sectorName         : \"Sector\",\n        activityName       : \"Activity\", \n        actions            : 'Action',\n      },\n      \"tableObjects\"       : {\n        deleteMethod       : 'delete',\n        apiLink            : '/api/sectorMappings/',\n        paginationApply    : true,\n        searchApply        : true,\n        editUrl            : '/sector-mapping/'\n      },\n      \"startRange\"         : 0,\n      \"limitRange\"         : 10,\n      \"editId\"             : this.props.match.params ? this.props.match.params.sectorMappingId : '',\n    }\n  }\n\n \n  handleChange(event){\n    event.preventDefault();\n    this.setState({\n      \"goalName\"               : this.refs.goalName.value,          \n      \"goalType\"               : this.refs.goalType.value,          \n      \"selectedActivities\"     : this.state.selectedActivities,          \n    });\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      fields\n    });\n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n\n  isTextKey(evt){\n   var charCode = (evt.which) ? evt.which : evt.keyCode\n   if (charCode!=189 && charCode > 32 && (charCode < 65 || charCode > 90) )\n   {\n    evt.preventDefault();\n      return false;\n    }\n    else{\n      return true;\n    } \n  }\n  Submit(event){\n    event.preventDefault();\n    var selectedActivities = this.state.selectedActivities;\n    if (this.validateFormReq() && this.validateForm()) {\n      if (this.state.selectedActivities==\"\"){      \n        swal({\n          title: 'abc',\n          text: \"Please select any Activity\",\n          button: true,\n        });\n      }else{        \n        var mappingValues= \n        {     \n          \"goal\"   : this.refs.goalName.value,          \n          \"type\"   : this.refs.goalType.value,          \n          \"sector\" : this.state.selectedActivities,                  \n        };\n        let fields = {};\n        fields[\"goalName\"]  = \"\";\n        fields[\"goalType\"]  = \"\";\n        axios.post('/api/sectorMappings',mappingValues)\n          .then((response)=>{\n            swal({\n              title : response.data.message,\n              text  : response.data.message\n            });\n            this.getData(this.state.startRange, this.state.limitRange);\n          })\n          .catch(function(error){\n            console.log(\"error = \",error);\n          });\n        selectedActivities.map((a, index)=>{\n          this.setState({\n            [a.sector_ID +\"|\"+a.sectorName+\"|\"+a.activity_ID+\"|\"+a.activityName] : false\n          })\n        })\n        this.setState({\n          \"goalName\"           :\"\",\n          \"goalType\"           :\"\",\n          \"selectedActivities\" :[],\n          fields               :fields\n        });\n        \n      }\n    }  \n  }\n  Update(event){\n    event.preventDefault();\n    var selectedActivities = this.state.selectedActivities;\n    if(this.refs.goalName.value == \"\" || this.refs.goalType.value ==\"\")\n   {\n      if (this.validateFormReq() && this.validateForm()){\n      }\n    }else{\n    var id2 = this.state.uID;\n    var mappingValues= \n    {     \n      \"sectorMapping_ID\"    : this.state.editId,\n      \"goal\"                : this.refs.goalName.value,\n      \"type\"                : this.refs.goalType.value,          \n      \"sector\"              : this.state.selectedActivities,                  \n    };\n    let fields = {};\n    fields[\"goalName\"]  = \"\";\n    fields[\"goalType\"]  = \"\";\n\n    axios.patch('/api/sectorMappings/update',mappingValues)\n      .then((response)=>{\n        swal({\n          title : response.data.message,\n          text  : response.data.message\n        });\n        this.getData(this.state.startRange, this.state.limitRange);\n      })\n      .catch(function(error){\n        console.log(\"error = \",error);\n      });\n      selectedActivities.map((a, index)=>{\n        this.setState({\n          [a.sector_ID +\"|\"+a.sectorName+\"|\"+a.activity_ID+\"|\"+a.activityName] : false\n        })\n      })\n      this.setState({\n        \"goalName\"           : \"\",\n        \"goalType\"           : \"\",\n        \"selectedActivities\" : [],\n        fields               : fields\n      });\n      \n    }   \n    \n    this.props.history.push('/sector-mapping');\n    this.setState({\n      \"editId\"              : \"\",\n    });\n  }\n\n  validateFormReq() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n    \n      if (!fields[\"goalName\"]) {\n        formIsValid = false;\n        errors[\"goalName\"] = \"This field is required.\";\n      }     \n      if (!fields[\"goalType\"]) {\n        formIsValid = false;\n        errors[\"goalType\"] = \"This field is required.\";\n      } \n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n  }\n  \n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n    \n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n  }\n\n  componentWillReceiveProps(nextProps){\n    var editId = nextProps.match.params.sectorMappingId;\n    if(nextProps.match.params.sectorMappingId){\n      this.setState({\n        editId : editId,\n        editSectorId : nextProps.match.params.sectorId\n      },()=>{\n        this.edit(this.state.editId);\n      })\n      this.getAvailableSector(this.state.editId);\n    }\n    if(nextProps){\n      this.getLength();\n    }\n  }\n\n  componentDidMount() {\n    var editId = this.props.match.params.sectorMappingId;\n    if(this.state.editId){      \n      this.edit(this.state.editId);\n    }\n    this.getLength();\n    this.getData(this.state.startRange, this.state.limitRange);\n    this.getAvailableSector(this.state.editSectorId);  \n  }\n\n  edit(id){\n    axios({\n      method: 'get',\n      url: '/api/sectorMappings/'+id,\n    }).then((response)=> {\n      var editData = response.data[0];\n      editData.sector.map((a, i)=>{\n        this.setState({\n          [a.sector_ID +\"|\"+a.sectorName+\"|\"+a.activity_ID+\"|\"+a.activityName] : true\n        },()=>{\n        })\n      })\n      this.setState({\n        \"goalName\"                :editData.goal,        \n        \"goalType\"                :editData.type,      \n        \"selectedActivities\"      :editData.sector, \n      });\n    }).catch(function (error) {\n    });\n  }\n  \n  getLength(){\n    axios.get('/api/sectorMappings/count')\n    .then((response)=>{\n      // console.log('response', response.data);\n      this.setState({\n        dataCount : response.data.dataLength\n      },()=>{\n        console.log('dataCount', this.state.dataCount);\n      })\n    })\n    .catch(function(error){\n      \n    });\n  }\n  \n  getData(startRange, limitRange){\n     var data = {\n      limitRange : limitRange,\n      startRange : startRange,\n      }\n       axios.post('/api/sectorMappings/edit/list',data)\n      .then((response)=>{\n        this.setState({\n          tableData : response.data\n        })\n      })\n      .catch(function(error){        \n      });\n  }\n\n  selectActivity(event){\n    var selectedActivities = this.state.selectedActivities;\n    var value = event.target.checked;\n    var id    = event.target.id;\n\n    this.setState({\n      [id] : value\n    },()=>{\n      if(this.state[id] == true){\n        selectedActivities.push({\n          \"sector_ID\"      : id.split(\"|\")[0],\n          \"sectorName\"     : id.split(\"|\")[1],\n          \"activity_ID\"    : id.split(\"|\")[2],\n          \"activityName\"   : id.split(\"|\")[3]\n        });\n        this.setState({\n          selectedActivities   : selectedActivities,\n        });\n      }else{\n        var index = selectedActivities.findIndex(v => v.activityName === id);\n        selectedActivities.splice(selectedActivities.findIndex(v => v.activityName === id), 1);\n        this.setState({\n          selectedActivities : selectedActivities\n        });\n      }\n    });      \n  }\n\n  getAvailableSector(){\n    axios({\n      method: 'get',\n      url: '/api/sectors/list',\n    }).then((response)=> {        \n      this.setState({\n        availableSectors : response.data\n      })\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n  getSearchText(searchText, startRange, limitRange){\n    this.setState({\n      tableData : []\n    })\n  }\n  render() {\n    return(\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"formWrapper\">\n            <section className=\"content\">\n              <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent \">\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 titleaddcontact\">\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 contactdeilsmg pageHeader\">\n                      Master Data                                        \n                      </div>\n                    <hr className=\"hr-head container-fluid row\"/>\n                  </div>\n                  <form className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 formLable\" id=\"sectorMapping\">                   \n                    <div className=\"col-lg-12 \">\n                       <h4 className=\"pageSubHeader\">Sector Mapping</h4>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\" col-lg-12 col-sm-12 col-xs-12 formLable valid_box \">\n                        <div className=\" col-lg-6 col-md-4 col-sm-6 col-xs-12 \">\n                          <label className=\"formLable\">Type of Goal/Project</label><span className=\"asterix\">*</span>\n                          <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"goalType\" >\n                            <select className=\"custom-select form-control inputBox\" ref=\"goalType\" name=\"goalType\" value={this.state.goalType} onChange={this.handleChange.bind(this)}>\n                              <option  className=\"hidden\" >-- Select --</option>\n                              <option>SDG Goal</option>\n                              <option>ADP Goal</option>\n                              <option>Empowerment Line Goal</option>\n                              <option>Project Name</option>\n                            </select>\n                          </div>\n                          <div className=\"errorMsg\">{this.state.errors.goalType}</div>\n                        </div>\n                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12 \">\n                          <label className=\"formLable\">Enter Goal / Project Name</label><span className=\"asterix\">*</span>\n                          <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main \" id=\"goalName\" >\n                            {/*<div className=\"input-group-addon inputIcon\">\n                              <i className=\"fa fa-graduation-cap fa\"></i>\n                            </div>*/}\n                            <input type=\"text\" className=\"form-control inputBox\" value={this.state.goalName} onChange={this.handleChange.bind(this)} onKeyDown={this.isTextKey.bind(this)}  placeholder=\"\" name=\"goalName\" ref=\"goalName\" />\n                          </div>\n                          <div className=\"errorMsg\">{this.state.errors.goalName}</div>\n                        </div>\n                        <div className=\" col-md-12 col-sm-6 col-xs-12 \">\n                         \n                        </div>\n                      </div> \n                    </div><br/>\n                    <div className=\"col-lg-12 col-xs-12 col-sm-12 col-md-12 \"><label className=\"fbold\">Please Select Activities to be mapped with above {this.state.goalType}</label></div>\n                    <div className=\"\">\n                      <div className=\" col-lg-12 col-sm-12 col-xs-12 formLable\">\n                        <div >\n                          <div >\n                            {\n                              this.state.availableSectors ?\n                              this.state.availableSectors.map((data, index)=>{\n                                return(\n                                  <div key={index} className=\" col-md-4  col-lg-4 col-sm-12 col-xs-12 blockheight noPadding\">\n                                    <label  className=\"formLable faintColor\">{data.sector}</label>\n                                    {\n                                      data.activity.map((a, i)=>{\n                                        return(\n                                          <div key ={i} className=\"col-lg-12 col-sm-12 col-xs-12 \">\n                                            <div className=\"row\"> \n                                              <div className=\"actionDiv\" id=\"activityName\">\n                                                <div className=\"SDGContainer col-lg-1\">\n                                                  <input type=\"checkbox\" name=\"activityName\" className =\"activityName\" id={data._id +\"|\"+data.sector+\"|\"+a._id+\"|\"+a.activityName}  checked={this.state[data._id +\"|\"+data.sector+\"|\"+a._id+\"|\"+a.activityName]?true:false} onChange={this.selectActivity.bind(this)} />\n                                                  <span className=\"SDGCheck\"></span>\n                                                </div>\n                                              </div>                            \n                                              <label className=\"listItem\">{a.activityName}</label>\n                                            </div>  \n                                          </div>\n                                        );\n                                      })\n                                    }\n                                  </div>\n                               \n                                );\n                              })\n                              :\n                              null\n                            }\n                          </div>                          \n                        </div>\n                      </div> \n                    </div><br/>\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\n                      {\n                        this.state.editId ? \n                        <button className=\" col-lg-2 btn submit mt pull-right\" onClick={this.Update.bind(this)}> Update </button>\n                        :\n                        <button className=\" col-lg-2 btn submit mt pull-right\" onClick={this.Submit.bind(this)}> Submit </button>\n                      }\n                    </div> \n                  </form>\n                  <div className=\"col-lg-12 \">\n                     <hr className=\"\"/>\n                  </div>\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt\">\n                    <IAssureTable \n                      tableHeading={this.state.tableHeading}\n                      twoLevelHeader={this.state.twoLevelHeader} \n                      dataCount={this.state.dataCount}\n                      tableData={this.state.tableData}\n                      getData={this.getData.bind(this)}\n                      tableObjects={this.state.tableObjects}\n                      getSearchText={this.getSearchText.bind(this)}\n                    />\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default SectorMapping"]},"metadata":{},"sourceType":"module"}