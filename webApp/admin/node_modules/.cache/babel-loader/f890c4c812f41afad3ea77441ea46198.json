{"ast":null,"code":"var _jsxFileName = \"/home/user/REACT PROJECTS/LFMIS/LupinMIS/webApp/admin/src/coreAdmin/masterData/centerDetail/centerDetail.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport ReactTable from \"react-table\";\nimport swal from 'sweetalert';\nimport _ from 'underscore';\nimport 'bootstrap/js/tab.js';\nimport IAssureTable from \"../../IAssureTable/IAssureTable.jsx\";\nimport \"./centerDetail.css\";\naxios.defaults.baseURL = 'http://qalmisapi.iassureit.com';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nvar centerDetailArray = [];\n\nclass centerDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeTab = data => {\n      this.setState({\n        tabtype: data\n      });\n    };\n\n    this.state = {\n      \"typeOfCenter\": \"\",\n      \"nameOfCenter\": \"\",\n      \"address\": \"\",\n      \"state\": \"\",\n      \"district\": \"\",\n      \"pincode\": \"\",\n      \"centerInchargeName\": \"\",\n      \"centerInchargeContact\": \"\",\n      \"centerInchargeEmail\": \"\",\n      \"MISCoordinatorName\": \"\",\n      \"MISCoordinatorContact\": \"\",\n      \"MISCoordinatorEmail\": \"\",\n      \"districtCovered\": \"\",\n      \"blockCovered\": \"\",\n      \"centerDetailArray\": [],\n      \"array\": [],\n      \"shown\": true,\n      \"tabtype\": \"location\",\n      \"fields\": {},\n      \"errors\": {},\n      \"listofStates\": [],\n      \"listofDistrict\": [],\n      \"listofBlocks\": [],\n      \"listofVillages\": [],\n      \"selectedVillages\": [],\n      \"stateCode\": [],\n      \"twoLevelHeader\": {\n        apply: false,\n        firstHeaderData: [{\n          heading: '',\n          mergedColoums: 4\n        }, {\n          heading: 'Center Incharge',\n          mergedColoums: 3\n        }, {\n          heading: 'MIS Coordinator',\n          mergedColoums: 3\n        }]\n      },\n      \"tableHeading\": {\n        type: \"Type of Center\",\n        centerName: \"Name of Center\",\n        places: \"Address\",\n        centerInchargeDetail: \"Center Incharge Detail\",\n        misCoordinatorDetail: \"MIS Coordinator Detail\",\n        numberofVillage: \"No of Villages\",\n        actions: 'Action'\n      },\n      \"tableObjects\": {\n        deleteMethod: 'delete',\n        apiLink: '/api/centers/',\n        paginationApply: true,\n        searchApply: true,\n        editUrl: '/center-details/'\n      },\n      \"startRange\": 0,\n      \"limitRange\": 10,\n      \"editId\": this.props.match.params ? this.props.match.params.id : ''\n    };\n    this.changeTab = this.changeTab.bind(this);\n  }\n\n  handleclick(event) {\n    /*  let fields = {};\n      let errors={};\n      if(this.refs.district.value===\"\"){ \n        console.log(\"state\", this.state.state);\n         errors[\"district\"] = \"Please select State.\";\n         errors[\"districtCovered\"] = \"Please select State.\";\n      }*/\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({\n      \"typeOfCenter\": this.refs.typeOfCenter.value,\n      \"nameOfCenter\": this.refs.nameOfCenter.value,\n      \"address\": this.refs.address.value,\n      \"state\": this.refs.state.value,\n      \"district\": this.refs.district.value,\n      \"pincode\": this.refs.pincode.value,\n      \"centerInchargeName\": this.refs.centerInchargeName.value,\n      \"centerInchargeContact\": this.refs.centerInchargeContact.value,\n      \"centerInchargeEmail\": this.refs.centerInchargeEmail.value,\n      \"MISCoordinatorName\": this.refs.MISCoordinatorName.value,\n      \"MISCoordinatorContact\": this.refs.MISCoordinatorContact.value,\n      \"MISCoordinatorEmail\": this.refs.MISCoordinatorEmail.value,\n      \"districtCovered\": this.refs.districtCovered.value,\n      \"blockCovered\": this.refs.blockCovered.value\n    });\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      fields\n    });\n\n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n\n  isNumberKey(evt) {\n    var charCode = evt.which ? evt.which : evt.keyCode;\n\n    if (charCode > 31 && (charCode < 48 || charCode > 57) && (charCode < 96 || charCode > 105)) {\n      evt.preventDefault();\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isTextKey(evt) {\n    var charCode = evt.which ? evt.which : evt.keyCode;\n\n    if (charCode != 189 && charCode > 32 && (charCode < 65 || charCode > 90)) {\n      evt.preventDefault();\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  Submit(event) {\n    event.preventDefault();\n    var selectedVillages = this.state.selectedVillages;\n\n    if (this.validateForm() && this.validateFormReq()) {\n      var districtsCovered = _.pluck(_.uniq(this.state.selectedVillages, function (x) {\n        return x.state;\n      }), 'district');\n\n      var selectedBlocks = _.uniq(this.state.selectedVillages, function (x) {\n        return x.block;\n      });\n\n      var blocksCovered = selectedBlocks.map((a, index) => {\n        return _.omit(a, 'village');\n      });\n      var id2 = this.state.uID;\n      var centerDetail = {\n        \"type\": this.refs.typeOfCenter.value,\n        \"centerName\": this.refs.nameOfCenter.value,\n        \"address\": {\n          \"addressLine\": this.refs.address.value,\n          \"state\": this.refs.state.value.split('|')[0],\n          \"district\": this.refs.district.value,\n          \"pincode\": this.refs.pincode.value,\n          \"stateCode\": this.refs.state.value.split('|')[1]\n        },\n        \"districtsCovered\": districtsCovered,\n        \"blocksCovered\": blocksCovered,\n        \"villagesCovered\": this.state.selectedVillages,\n        \"centerInchargeName\": this.refs.centerInchargeName.value,\n        \"centerInchargeMobile\": this.refs.centerInchargeContact.value,\n        \"centerInchargeEmail\": this.refs.centerInchargeEmail.value,\n        \"misCoordinatorName\": this.refs.MISCoordinatorName.value,\n        \"misCoordinatorMobile\": this.refs.MISCoordinatorContact.value,\n        \"misCoordinatorEmail\": this.refs.MISCoordinatorEmail.value\n      }; // console.log(\"centerDetail\",centerDetail);\n\n      let fields = {};\n      fields[\"typeOfCenter\"] = \"\";\n      fields[\"nameOfCenter\"] = \"\";\n      fields[\"address\"] = \"\";\n      fields[\"state\"] = \"\";\n      fields[\"district\"] = \"\";\n      fields[\"pincode\"] = \"\";\n      fields[\"centerInchargeName\"] = \"\";\n      fields[\"centerInchargeContact\"] = \"\";\n      fields[\"centerInchargeEmail\"] = \"\";\n      fields[\"MISCoordinatorName\"] = \"\";\n      fields[\"MISCoordinatorContact\"] = \"\";\n      fields[\"MISCoordinatorEmail\"] = \"\";\n      fields[\"districtCovered\"] = \"\";\n      fields[\"blockCovered\"] = \"\"; // console.log('centerDetail',centerDetail);\n\n      axios.post('/api/centers', centerDetail).then(response => {\n        this.getData(this.state.startRange, this.state.limitRange);\n        swal({\n          title: response.data.message,\n          text: response.data.message\n        });\n      }).catch(function (error) {});\n      this.setState({\n        \"typeOfCenter\": \"\",\n        \"nameOfCenter\": \"\",\n        \"address\": \"\",\n        \"state\": \"\",\n        \"district\": \"\",\n        \"pincode\": \"\",\n        \"centerInchargeName\": \"\",\n        \"centerInchargeContact\": \"\",\n        \"centerInchargeEmail\": \"\",\n        \"MISCoordinatorName\": \"\",\n        \"MISCoordinatorContact\": \"\",\n        \"MISCoordinatorEmail\": \"\",\n        \"districtCovered\": \"\",\n        \"blockCovered\": \"\",\n        \"selectedVillages\": [],\n        \"listofDistrict\": [],\n        \"listofBlocks\": [],\n        \"listofVillages\": [],\n        \"fields\": fields\n      });\n      selectedVillages.map((a, i) => {\n        this.setState({\n          [a.village]: false\n        });\n      });\n    }\n  }\n\n  Update(event) {\n    event.preventDefault();\n    var selectedVillages = this.state.selectedVillages;\n\n    if (this.refs.address.value == \"\" || this.refs.typeOfCenter.value == \"\" || this.refs.nameOfCenter.value == \"\" || this.refs.district.value == \"\" || this.refs.pincode.value == \"\" || this.refs.centerInchargeName.value == \"\" || this.refs.centerInchargeContact.value == \"\" || this.refs.centerInchargeEmail.value == \"\" || this.refs.MISCoordinatorName.value == \"\" || this.refs.MISCoordinatorContact.value == \"\" || this.refs.MISCoordinatorEmail.value == \"\") {\n      console.log('state validation');\n\n      if (this.validateForm() && this.validateFormReq()) {\n        console.log('abc');\n      }\n    } else {\n      var districtsCovered = _.pluck(_.uniq(this.state.selectedVillages, function (x) {\n        return x.state;\n      }), 'district');\n\n      var selectedBlocks = _.uniq(this.state.selectedVillages, function (x) {\n        return x.block;\n      });\n\n      var blocksCovered = selectedBlocks.map((a, index) => {\n        return _.omit(a, 'village');\n      });\n      var centerDetail = {\n        \"center_ID\": this.state.editId,\n        \"centerName\": this.refs.nameOfCenter.value,\n        \"type\": this.refs.typeOfCenter.value,\n        \"address\": {\n          \"addressLine\": this.refs.address.value,\n          \"state\": this.refs.state.value.split('|')[0],\n          \"district\": this.refs.district.value,\n          \"pincode\": this.refs.pincode.value,\n          \"stateCode\": this.refs.state.value.split('|')[1]\n        },\n        \"districtsCovered\": districtsCovered,\n        \"blocksCovered\": blocksCovered,\n        \"villagesCovered\": this.state.selectedVillages,\n        \"centerInchargeName\": this.refs.centerInchargeName.value,\n        \"centerInchargeMobile\": this.refs.centerInchargeContact.value,\n        \"centerInchargeEmail\": this.refs.centerInchargeEmail.value,\n        \"misCoordinatorName\": this.refs.MISCoordinatorName.value,\n        \"misCoordinatorMobile\": this.refs.MISCoordinatorContact.value,\n        \"misCoordinatorEmail\": this.refs.MISCoordinatorEmail.value\n      };\n      let fields = {};\n      fields[\"typeOfCenter\"] = \"\";\n      fields[\"nameOfCenter\"] = \"\";\n      fields[\"address\"] = \"\";\n      fields[\"state\"] = \"\";\n      fields[\"district\"] = \"\";\n      fields[\"pincode\"] = \"\";\n      fields[\"centerInchargeName\"] = \"\";\n      fields[\"centerInchargeContact\"] = \"\";\n      fields[\"centerInchargeEmail\"] = \"\";\n      fields[\"MISCoordinatorName\"] = \"\";\n      fields[\"MISCoordinatorContact\"] = \"\";\n      fields[\"MISCoordinatorEmail\"] = \"\";\n      fields[\"districtCovered\"] = \"\";\n      fields[\"blockCovered\"] = \"\"; // console.log('centerDetail', centerDetail);\n\n      axios.patch('/api/centers', centerDetail).then(response => {\n        console.log('response', response);\n        this.getData(this.state.startRange, this.state.limitRange);\n        swal({\n          title: response.data.message,\n          text: response.data.message\n        });\n      }).catch(function (error) {});\n      this.setState({\n        \"typeOfCenter\": \"\",\n        \"nameOfCenter\": \"\",\n        \"address\": \"\",\n        \"state\": \"\",\n        \"district\": \"\",\n        \"pincode\": \"\",\n        \"centerInchargeName\": \"\",\n        \"centerInchargeContact\": \"\",\n        \"centerInchargeEmail\": \"\",\n        \"MISCoordinatorName\": \"\",\n        \"MISCoordinatorContact\": \"\",\n        \"MISCoordinatorEmail\": \"\",\n        \"districtCovered\": \"\",\n        \"blockCovered\": \"\",\n        \"selectedVillages\": [],\n        \"listofDistrict\": [],\n        \"listofBlocks\": [],\n        \"listofVillages\": [],\n        \"fields\": fields\n      });\n      selectedVillages.map((a, i) => {\n        this.setState({\n          [a.village]: false\n        });\n      });\n    }\n\n    this.props.history.push('/center-details');\n    this.setState({\n      \"editId\": \"\"\n    });\n  }\n\n  validateFormReq() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n\n    if (!fields[\"typeOfCenter\"]) {\n      formIsValid = false;\n      errors[\"typeOfCenter\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"nameOfCenter\"]) {\n      formIsValid = false;\n      errors[\"nameOfCenter\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"address\"]) {\n      formIsValid = false;\n      errors[\"address\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"state\"]) {\n      formIsValid = false;\n      errors[\"state\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"district\"]) {\n      formIsValid = false;\n      errors[\"district\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"pincode\"]) {\n      formIsValid = false;\n      errors[\"pincode\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"centerInchargeName\"]) {\n      formIsValid = false;\n      errors[\"centerInchargeName\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"centerInchargeContact\"]) {\n      formIsValid = false;\n      errors[\"centerInchargeContact\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"centerInchargeEmail\"]) {\n      formIsValid = false;\n      errors[\"centerInchargeEmail\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"MISCoordinatorName\"]) {\n      formIsValid = false;\n      errors[\"MISCoordinatorName\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"MISCoordinatorContact\"]) {\n      formIsValid = false;\n      errors[\"MISCoordinatorContact\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"MISCoordinatorEmail\"]) {\n      formIsValid = false;\n      errors[\"MISCoordinatorEmail\"] = \"This field is required.\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n\n    if (typeof fields[\"centerInchargeEmail\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$|^$)/i);\n\n      if (!pattern.test(fields[\"centerInchargeEmail\"])) {\n        formIsValid = false;\n        errors[\"centerInchargeEmail\"] = \"Please enter valid Email.\";\n      }\n    }\n\n    if (typeof fields[\"MISCoordinatorEmail\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$|^$)/i);\n\n      if (!pattern.test(fields[\"MISCoordinatorEmail\"])) {\n        formIsValid = false;\n        errors[\"MISCoordinatorEmail\"] = \"Please enter valid Email.\";\n      }\n    }\n\n    if (typeof fields[\"centerInchargeContact\"] !== \"undefined\") {\n      if (!fields[\"centerInchargeContact\"].match(/^[0-9]{10}$|^$/)) {\n        formIsValid = false;\n        errors[\"centerInchargeContact\"] = \"Please enter valid mobile no.\";\n      }\n    }\n\n    if (typeof fields[\"MISCoordinatorContact\"] !== \"undefined\") {\n      if (!fields[\"MISCoordinatorContact\"].match(/^[0-9]{10}$|^$/)) {\n        formIsValid = false;\n        errors[\"MISCoordinatorContact\"] = \"Please enter valid mobile no.\";\n      }\n    }\n\n    if (typeof fields[\"pincode\"] !== \"undefined\") {\n      if (!fields[\"pincode\"].match(/^[0-9]{6}$|^$/)) {\n        formIsValid = false;\n        errors[\"pincode\"] = \"Please enter valid Pincode.\";\n      }\n    }\n\n    if (typeof fields[\"nameOfCenter\"] !== \"undefined\") {\n      // if (!fields[\"beneficiaryID\"].match(/^(?!\\s*$)[-a-zA-Z0-9_:,.' ']{1,100}$/)) {\n      if (!fields[\"nameOfCenter\"].match(/^[_A-z]*((-|\\s)*[_A-z])*$|^$/)) {\n        formIsValid = false;\n        errors[\"nameOfCenter\"] = \"Please enter valid Center Name.\";\n      }\n    }\n\n    if (typeof fields[\"centerInchargeName\"] !== \"undefined\") {\n      // if (!fields[\"beneficiaryID\"].match(/^(?!\\s*$)[-a-zA-Z0-9_:,.' ']{1,100}$/)) {\n      if (!fields[\"centerInchargeName\"].match(/^[_A-z]*((-|\\s)*[_A-z])*$|^$/)) {\n        formIsValid = false;\n        errors[\"centerInchargeName\"] = \"Please enter valid Name.\";\n      }\n    }\n\n    if (typeof fields[\"MISCoordinatorName\"] !== \"undefined\") {\n      // if (!fields[\"beneficiaryID\"].match(/^(?!\\s*$)[-a-zA-Z0-9_:,.' ']{1,100}$/)) {\n      if (!fields[\"MISCoordinatorName\"].match(/^[_A-z]*((-|\\s)*[_A-z])*$|^$/)) {\n        formIsValid = false;\n        errors[\"MISCoordinatorName\"] = \"Please enter valid Name.\";\n      }\n    }\n    /*\n    if (typeof fields[\"address\"] !== \"undefined\") {\n     // if (!fields[\"beneficiaryID\"].match(/^(?!\\s*$)[-a-zA-Z0-9_:,.' ']{1,100}$/)) {\n     if (!fields[\"address\"].match(/^[_A-z0-9]*((-|\\s)*[_A-z0-9])*$|^$/)) {\n       formIsValid = false;\n       errors[\"address\"] = \"Please enter valid Address.\";\n     }\n    }    */\n\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  componentDidMount() {\n    if (this.state.editId) {\n      this.edit(this.state.editId);\n    }\n\n    this.getLength();\n    this.getState();\n    this.getData(this.state.startRange, this.state.limitRange);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var editId = nextProps.match.params.id;\n\n    if (nextProps.match.params.id) {\n      this.setState({\n        editId: editId\n      });\n      this.edit(editId);\n    }\n\n    if (nextProps) {\n      this.getLength();\n    }\n  }\n\n  edit(id) {\n    axios({\n      method: 'get',\n      url: '/api/centers/' + id\n    }).then(response => {\n      var editData = response.data[0];\n      editData.villagesCovered.map((data, i) => {\n        this.setState({\n          [data.village]: true\n        });\n      });\n      console.log(\"editData\", editData);\n      this.getDistrict(editData.address.stateCode);\n      this.getBlock(editData.address.stateCode, editData.address.district);\n      this.getVillages(editData.address.stateCode, editData.address.district, editData.blockCovered);\n      this.setState({\n        \"typeOfCenter\": editData.type,\n        \"nameOfCenter\": editData.centerName,\n        \"address\": editData.address.addressLine,\n        \"state\": editData.address.state + '|' + editData.address.stateCode,\n        \"district\": editData.address.district,\n        \"pincode\": editData.address.pincode,\n        \"centerInchargeName\": editData.centerInchargeName,\n        \"centerInchargeContact\": editData.centerInchargeMobile,\n        \"centerInchargeEmail\": editData.centerInchargeEmail,\n        \"MISCoordinatorName\": editData.misCoordinatorName,\n        \"MISCoordinatorContact\": editData.misCoordinatorMobile,\n        \"MISCoordinatorEmail\": editData.misCoordinatorEmail,\n        \"selectedVillages\": editData.villagesCovered,\n        \"districtCovered\": \"\",\n        \"blockCovered\": \"\",\n        \"villagesCovered\": editData.villagesCovered\n      }, () => {\n        console.log(this.state);\n      });\n    }).catch(function (error) {});\n  }\n\n  getLength() {\n    axios.get('/api/centers/count').then(response => {\n      // console.log('response', response.data);\n      this.setState({\n        dataCount: response.data.dataLength\n      }, () => {// console.log('dataCount', this.state.dataCount);\n      });\n    }).catch(function (error) {});\n  }\n\n  getData(startRange, limitRange) {\n    var data = {\n      limitRange: limitRange,\n      startRange: startRange\n    };\n    axios.post('/api/centers/list', data).then(response => {\n      // console.log('response', response.data);\n      var tableData = response.data.map((a, i) => {\n        return {\n          _id: a._id,\n          type: a.type,\n          centerName: a.centerName,\n          places: a.address,\n          centerInchargeDetail: a.centerInchargeDetail,\n          misCoordinatorDetail: a.misCoordinatorDetail,\n          numberofVillage: a.numberofVillage\n        };\n      });\n      this.setState({\n        tableData: tableData\n      });\n    }).catch(function (error) {});\n    /*\n          var listofStates = ['Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh','Maharashtra'];\n          this.setState({\n            listofStates : listofStates\n          })*/\n  }\n\n  componentWillMount() {// window.location.reload(true);\n  }\n\n  getState() {\n    axios({\n      method: 'get',\n      url: 'http://locationapi.iassureit.com/api/states/get/list/IN'\n    }).then(response => {\n      // console.log('response ==========', response.data);\n      this.setState({\n        listofStates: response.data\n      }, () => {// console.log('listofStates', this.state.listofStates);\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  selectState(event) {\n    event.preventDefault();\n    var selectedState = event.target.value;\n    this.setState({\n      state: selectedState\n    }, () => {\n      var stateCode = this.state.state.split('|')[1]; // console.log('state', stateCode);\n\n      this.setState({\n        stateCode: stateCode\n      }, () => {\n        console.log('stateCode', this.state.stateCode);\n        this.getDistrict(this.state.stateCode);\n      });\n    });\n    this.handleChange(event);\n  }\n\n  getDistrict(stateCode) {\n    axios({\n      method: 'get',\n      url: 'http://locationapi.iassureit.com/api/districts/get/list/' + stateCode + '/IN'\n    }).then(response => {\n      // console.log('response ==========', response.data);\n      this.setState({\n        listofDistrict: response.data\n      }, () => {\n        console.log('listofDistrict', this.state.listofDistrict);\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  districtCoveredChange(event) {\n    event.preventDefault();\n    var districtCovered = event.target.value; // console.log('districtCovered', districtCovered);\n\n    this.setState({\n      districtCovered: districtCovered\n    }, () => {\n      var selectedDistrict = this.state.districtCovered.split('|')[0];\n      console.log(\"selectedDistrict\", selectedDistrict);\n      this.setState({\n        selectedDistrict: selectedDistrict\n      }, () => {\n        console.log('selectedDistrict', this.state.selectedDistrict);\n        this.getBlock(this.state.stateCode, this.state.selectedDistrict);\n      });\n    });\n  }\n\n  getBlock(stateCode, selectedDistrict) {\n    axios({\n      method: 'get',\n      url: 'http://locationapi.iassureit.com/api/blocks/get/list/' + selectedDistrict + '/' + stateCode + '/IN'\n    }).then(response => {\n      console.log('response ==========', response.data);\n      this.setState({\n        listofBlocks: response.data\n      }, () => {\n        console.log('listofBlocks', this.state.listofBlocks);\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  selectBlock(event) {\n    event.preventDefault();\n    var blockCovered = event.target.value;\n    this.setState({\n      blockCovered: blockCovered\n    }, () => {\n      console.log(\"blockCovered\", blockCovered);\n      this.getVillages(this.state.stateCode, this.state.selectedDistrict, this.state.blockCovered);\n    });\n  }\n\n  getVillages(stateCode, selectedDistrict, blockCovered) {\n    console.log(stateCode, selectedDistrict, blockCovered);\n    axios({\n      method: 'get',\n      url: 'http://locationapi.iassureit.com/api/cities/get/list/' + blockCovered + '/' + selectedDistrict + '/' + stateCode + '/IN'\n    }).then(response => {\n      console.log('response ==========', response.data);\n      this.setState({\n        listofVillages: response.data\n      }, () => {\n        console.log('listofVillages', this.state.listofVillages);\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  selectVillage(event) {\n    var selectedVillages = this.state.selectedVillages;\n    var value = event.target.checked;\n    var id = event.target.id;\n    this.setState({\n      [id]: value\n    }, () => {\n      console.log('village', this.state[id], id);\n\n      if (this.state[id] == true) {\n        selectedVillages.push({\n          district: this.refs.districtCovered.value,\n          block: this.refs.blockCovered.value,\n          village: id\n        });\n        this.setState({\n          selectedVillages: selectedVillages\n        });\n        console.log('selectedVillages', selectedVillages);\n      } else {\n        var index = selectedVillages.findIndex(v => v.village === id); // console.log('index', index);\n\n        selectedVillages.splice(selectedVillages.findIndex(v => v.village === id), 1);\n        this.setState({\n          selectedVillages: selectedVillages\n        }, () => {// console.log('selectedVillages',this.state.selectedVillages);\n        });\n      }\n    });\n  }\n\n  editVillage(event) {\n    event.preventDefault();\n    var id = event.target.id;\n    console.log('id', id);\n    var selectedVillages = this.state.selectedVillages[id];\n    console.log('selectedVillages', selectedVillages);\n  }\n\n  deleteVillage(event) {\n    event.preventDefault();\n    var id = event.target.id;\n    console.log('id', id);\n    var selectedVillages = this.state.selectedVillages; // console.log('index', index);\n\n    selectedVillages.splice(id, 1);\n    this.setState({\n      selectedVillages: selectedVillages\n    }, () => {// console.log('selectedVillages',this.state.selectedVillages);\n    });\n  }\n  /*  onclickDist(event){\n      event.preventDefault();\n      console.log('ghjg');\n  \n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n      // $(\"html,body\").scrollTop(0);\n      console.log(!fields[\"state\"]);\n      if (!fields[\"state\"]) {\n        console.log('state errors');\n        formIsValid = false;\n        errors[\"state\"] = \"This field is required.\";\n      }       \n      this.setState({\n        errors: errors\n      });\n  \n    }*/\n\n\n  getSearchText(searchText, startRange, limitRange) {\n    this.setState({\n      tableData: []\n    });\n  }\n\n  render() {\n    // console.log('dataCount', this.state.dataCount, 'tableData', this.state.tableData);\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"formWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 titleaddcontact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 contactdeilsmg pageHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771\n      },\n      __self: this\n    }, \"Master Data\"), React.createElement(\"hr\", {\n      className: \"hr-head container-fluid row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 formLable\",\n      id: \"Academic_details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"pageSubHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    }, \"Center Details\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12 formLable boxHeight \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-12 col-xs-12  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783\n      },\n      __self: this\n    }, \"Select Type of Center\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"typeOfCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      value: this.state.typeOfCenter,\n      ref: \"typeOfCenter\",\n      name: \"typeOfCenter\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786\n      },\n      __self: this\n    }, \"--Select Center--\"), React.createElement(\"option\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787\n      },\n      __self: this\n    }, \"Development Center\"), React.createElement(\"option\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788\n      },\n      __self: this\n    }, \"CSR Center\"), React.createElement(\"option\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789\n      },\n      __self: this\n    }, \"ADP\"))), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792\n      },\n      __self: this\n    }, this.state.errors.typeOfCenter)), React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-12 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795\n      },\n      __self: this\n    }, \"Name of Center\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\",\n      id: \"nameOfCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox nameParts\",\n      value: this.state.nameOfCenter,\n      name: \"nameOfCenter\",\n      placeholder: \"\",\n      ref: \"nameOfCenter\",\n      onKeyDown: this.isTextKey.bind(this),\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799\n      },\n      __self: this\n    }, this.state.errors.nameOfCenter)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12  boxHeight \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-3 col-md-3 col-sm-12 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\",\n      id: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox nameParts\",\n      value: this.state.address,\n      name: \"address\",\n      placeholder: \"\",\n      ref: \"address\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810\n      },\n      __self: this\n    }, this.state.errors.address)), React.createElement(\"div\", {\n      className: \" col-lg-3 col-md-3 col-sm-12 col-xs-12  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      value: this.state.state,\n      ref: \"state\",\n      name: \"state\",\n      onChange: this.selectState.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"hidden\",\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816\n      },\n      __self: this\n    }, \"--Select--\"), this.state.listofStates ? this.state.listofStates.map((data, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: data.stateName + '|' + data.stateCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }, data.stateName);\n    }) : null)), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829\n      },\n      __self: this\n    }, this.state.errors.state)), React.createElement(\"div\", {\n      className: \" col-lg-3 col-md-3 col-sm-12 col-xs-12  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, \"District\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"district\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      value: this.state.district,\n      ref: \"district\",\n      name: \"district\",\n      onClick: this.handleclick.bind(this),\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835\n      },\n      __self: this\n    }, \"--Select District--\"), this.state.listofDistrict && this.state.listofDistrict.length > 0 ? this.state.listofDistrict.map((data, index) => {\n      // console.log(data);\n      return React.createElement(\"option\", {\n        key: index,\n        value: data.districtName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841\n        },\n        __self: this\n      }, data.districtName);\n    }) : React.createElement(\"option\", {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845\n      },\n      __self: this\n    }, \"Select select State first\"))), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849\n      },\n      __self: this\n    }, this.state.errors.district)), React.createElement(\"div\", {\n      className: \" col-lg-3 col-md-3 col-sm-12 col-xs-12  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }, \"Pincode\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\",\n      id: \"pincode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox \",\n      value: this.state.pincode,\n      name: \"pincode\",\n      placeholder: \"\",\n      ref: \"pincode\",\n      maxLength: \"6\",\n      onKeyDown: this.isNumberKey.bind(this),\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856\n      },\n      __self: this\n    }, this.state.errors.pincode)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12  boxHeight \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-4 col-md-4 col-sm-12 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }, \"Name of Center Incharge\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\",\n      id: \"centerInchargeName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox nameParts\",\n      value: this.state.centerInchargeName,\n      name: \"centerInchargeName\",\n      placeholder: \"\",\n      ref: \"centerInchargeName\",\n      onKeyDown: this.isTextKey.bind(this),\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }, this.state.errors.centerInchargeName)), React.createElement(\"div\", {\n      className: \" col-lg-4 col-md-4 col-sm-12 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }, \"Contact No. of Center Incharge\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\",\n      id: \"centerInchargeContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox nameParts\",\n      value: this.state.centerInchargeContact,\n      name: \"centerInchargeContact\",\n      placeholder: \"\",\n      ref: \"centerInchargeContact\",\n      maxLength: \"10\",\n      onKeyDown: this.isNumberKey.bind(this),\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878\n      },\n      __self: this\n    }, this.state.errors.centerInchargeContact)), React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-4 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881\n      },\n      __self: this\n    }, \"Email of Center Incharge\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"centerInchargeEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox \",\n      name: \"centerInchargeEmail\",\n      value: this.state.centerInchargeEmail,\n      placeholder: \"\",\n      ref: \"centerInchargeEmail\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, this.state.errors.centerInchargeEmail)))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12  boxHeight mt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-4 col-md-4 col-sm-12 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    }, \"Name of MIS Coordinator\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\",\n      id: \"MISCoordinatorName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox nameParts\",\n      value: this.state.MISCoordinatorName,\n      name: \"MISCoordinatorName\",\n      placeholder: \"\",\n      ref: \"MISCoordinatorName\",\n      onKeyDown: this.isTextKey.bind(this),\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903\n      },\n      __self: this\n    }, this.state.errors.MISCoordinatorName)), React.createElement(\"div\", {\n      className: \" col-lg-4 col-md-4 col-sm-12 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906\n      },\n      __self: this\n    }, \"Contact No. of MIS Coordinator\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\",\n      id: \"MISCoordinatorContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox \",\n      value: this.state.MISCoordinatorContact,\n      name: \"MISCoordinatorContact\",\n      placeholder: \"\",\n      ref: \"MISCoordinatorContact\",\n      maxLength: \"10\",\n      onKeyDown: this.isNumberKey.bind(this),\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913\n      },\n      __self: this\n    }, this.state.errors.MISCoordinatorContact)), React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-4 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916\n      },\n      __self: this\n    }, \"Email of MIS Coordinator\"), React.createElement(\"span\", {\n      className: \"asterix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"MISCoordinatorEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control inputBox \",\n      value: this.state.MISCoordinatorEmail,\n      name: \"MISCoordinatorEmail\",\n      placeholder: \"\",\n      ref: \"MISCoordinatorEmail\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923\n      },\n      __self: this\n    }, this.state.errors.MISCoordinatorEmail)))), React.createElement(\"div\", {\n      className: \"col-lg-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"pageSubHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931\n      },\n      __self: this\n    }, \"Villages Covered\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12  boxHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936\n      },\n      __self: this\n    }, \"District Covered\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"districtCovered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      value: this.state.districtCovered,\n      ref: \"districtCovered\",\n      name: \"districtCovered\",\n      onChange: this.districtCoveredChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939\n      },\n      __self: this\n    }, \"--Select District--\"), this.state.listofDistrict && this.state.listofDistrict.length > 0 ? this.state.listofDistrict.map((data, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: data.districtName + '|' + data._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944\n        },\n        __self: this\n      }, data.districtName);\n    }) : React.createElement(\"option\", {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948\n      },\n      __self: this\n    }, \"Please select State first\"))), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952\n      },\n      __self: this\n    }, this.state.errors.districtCovered)), React.createElement(\"div\", {\n      className: \" col-lg-6 col-md-6 col-sm-12 col-xs-12  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"formLable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955\n      },\n      __self: this\n    }, \"Block Covered\"), React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"blockCovered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      value: this.state.blockCovered,\n      ref: \"blockCovered\",\n      name: \"blockCovered\",\n      onChange: this.selectBlock.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958\n      },\n      __self: this\n    }, \"--Select Block--\"), this.state.listofBlocks && this.state.listofBlocks.length > 0 ? this.state.listofBlocks.map((data, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: data.blockName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963\n        },\n        __self: this\n      }, data.blockName);\n    }) : React.createElement(\"option\", {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967\n      },\n      __self: this\n    }, \"Please select District\"))), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971\n      },\n      __self: this\n    }, this.state.errors.blockCovered)))), this.state.listofVillages.length > 0 ? React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12 mt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979\n      },\n      __self: this\n    }, \"Villages Covered\"), this.state.listofVillages ? this.state.listofVillages.map((data, index) => {\n      /*  this.setState({\n          array : village,\n        })*/\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"col-md-3  col-lg-3 col-sm-12 col-xs-12 mt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 noPadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"actionDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"centerDetailContainer col-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: data.cityName,\n        checked: this.state[data.cityName] ? true : false,\n        onChange: this.selectVillage.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"centerDetailCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993\n        },\n        __self: this\n      }))), React.createElement(\"label\", {\n        className: \"centerDetaillistItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996\n        },\n        __self: this\n      }, \" \", data.cityName))));\n    }) : null)) : null, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015\n      },\n      __self: this\n    }, \"Villages Covered\"), React.createElement(\"table\", {\n      className: \"table iAssureITtable-bordered table-striped table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"tempTableHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019\n      },\n      __self: this\n    }, \"District\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020\n      },\n      __self: this\n    }, \"Block\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021\n      },\n      __self: this\n    }, \"Villages\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025\n      },\n      __self: this\n    }, this.state.selectedVillages && this.state.selectedVillages.length > 0 ? this.state.selectedVillages.map((data, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031\n        },\n        __self: this\n      }, data.district.split('|')[0]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }, data.block), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, data.village));\n    }) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"textAlignCenter\",\n      colSpan: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042\n      },\n      __self: this\n    }, \"Nothing to Display\"))))), React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047\n      },\n      __self: this\n    }, this.state.editId ? React.createElement(\"button\", {\n      className: \" col-lg-2 btn submit mt pull-right\",\n      onClick: this.Update.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1050\n      },\n      __self: this\n    }, \" Update \") : React.createElement(\"button\", {\n      className: \" col-lg-2 btn submit mt pull-right\",\n      onClick: this.Submit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052\n      },\n      __self: this\n    }, \" Submit \"))), React.createElement(\"div\", {\n      className: \"col-lg-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      className: \"hr-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059\n      },\n      __self: this\n    }, React.createElement(IAssureTable, {\n      tableHeading: this.state.tableHeading,\n      twoLevelHeader: this.state.twoLevelHeader,\n      dataCount: this.state.dataCount,\n      tableData: this.state.tableData,\n      getData: this.getData.bind(this),\n      tableObjects: this.state.tableObjects,\n      getSearchText: this.getSearchText.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default centerDetail;","map":{"version":3,"sources":["/home/user/REACT PROJECTS/LFMIS/LupinMIS/webApp/admin/src/coreAdmin/masterData/centerDetail/centerDetail.js"],"names":["React","Component","$","axios","ReactTable","swal","_","IAssureTable","defaults","baseURL","headers","post","centerDetailArray","centerDetail","constructor","props","changeTab","data","setState","tabtype","state","apply","firstHeaderData","heading","mergedColoums","type","centerName","places","centerInchargeDetail","misCoordinatorDetail","numberofVillage","actions","deleteMethod","apiLink","paginationApply","searchApply","editUrl","match","params","id","bind","handleclick","event","handleChange","preventDefault","refs","typeOfCenter","value","nameOfCenter","address","district","pincode","centerInchargeName","centerInchargeContact","centerInchargeEmail","MISCoordinatorName","MISCoordinatorContact","MISCoordinatorEmail","districtCovered","blockCovered","fields","target","name","validateForm","errors","isNumberKey","evt","charCode","which","keyCode","isTextKey","Submit","selectedVillages","validateFormReq","districtsCovered","pluck","uniq","x","selectedBlocks","block","blocksCovered","map","a","index","omit","id2","uID","split","then","response","getData","startRange","limitRange","title","message","text","catch","error","i","village","Update","console","log","editId","patch","history","push","formIsValid","scrollTop","pattern","RegExp","test","componentDidMount","edit","getLength","getState","componentWillReceiveProps","nextProps","method","url","editData","villagesCovered","getDistrict","stateCode","getBlock","getVillages","addressLine","centerInchargeMobile","misCoordinatorName","misCoordinatorMobile","misCoordinatorEmail","get","dataCount","dataLength","tableData","_id","componentWillMount","listofStates","selectState","selectedState","listofDistrict","districtCoveredChange","selectedDistrict","listofBlocks","selectBlock","listofVillages","selectVillage","checked","findIndex","v","splice","editVillage","deleteVillage","getSearchText","searchText","render","stateName","length","districtName","blockName","cityName","tableHeading","twoLevelHeader","tableObjects"],"mappings":"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","sourcesContent":["import React, { Component }   from 'react';\nimport $                      from 'jquery';\nimport axios                  from 'axios';\nimport ReactTable             from \"react-table\";\nimport swal                   from 'sweetalert';\nimport _                      from 'underscore';\nimport 'bootstrap/js/tab.js';\n\nimport IAssureTable           from \"../../IAssureTable/IAssureTable.jsx\";\nimport \"./centerDetail.css\";\n\naxios.defaults.baseURL = 'http://qalmisapi.iassureit.com';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n      \nvar centerDetailArray  = [];\nclass centerDetail extends Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      \"typeOfCenter\"             :\"\",\n      \"nameOfCenter\"             :\"\",\n      \"address\"                  :\"\",\n      \"state\"                    :\"\",\n      \"district\"                 :\"\",\n      \"pincode\"                  :\"\",\n      \"centerInchargeName\"       :\"\",\n      \"centerInchargeContact\"    :\"\",\n      \"centerInchargeEmail\"      :\"\",\n      \"MISCoordinatorName\"       :\"\",\n      \"MISCoordinatorContact\"    :\"\",\n      \"MISCoordinatorEmail\"      :\"\",\n      \"districtCovered\"          :\"\",\n      \"blockCovered\"             :\"\",\n      \"centerDetailArray\"        :[],\n      \"array\"                    :[],\n      \"shown\"                    : true,\n      \"tabtype\"                  : \"location\",\n      \"fields\"                   : {},\n      \"errors\"                   : {},\n      \"listofStates\"             : [],\n      \"listofDistrict\"           : [],\n      \"listofBlocks\"             : [],\n      \"listofVillages\"           : [],\n      \"selectedVillages\"         : [],\n      \"stateCode\"                : [],\n      \"twoLevelHeader\"           : {\n        apply                    : false,\n        firstHeaderData          : [\n                                      {\n                                          heading : '',\n                                          mergedColoums : 4\n                                      },\n                                      {\n                                          heading : 'Center Incharge',\n                                          mergedColoums : 3\n                                      },\n                                      {\n                                          heading : 'MIS Coordinator',\n                                          mergedColoums : 3\n                                      },\n                                    ]\n      },\n      \"tableHeading\"                : {\n        type                      : \"Type of Center\",\n        centerName                : \"Name of Center\",\n        places                    : \"Address\",\n        centerInchargeDetail      : \"Center Incharge Detail\",\n        misCoordinatorDetail      : \"MIS Coordinator Detail\",\n        numberofVillage           : \"No of Villages\",\n        actions                   : 'Action',\n      },\n      \"tableObjects\"              : {\n        deleteMethod              : 'delete',\n        apiLink                   : '/api/centers/',\n        paginationApply           : true,\n        searchApply               : true,\n        editUrl                   : '/center-details/'\n      },\n      \"startRange\"                : 0,\n      \"limitRange\"                : 10,\n      \"editId\"                    : this.props.match.params ? this.props.match.params.id : ''\n    }\n    this.changeTab = this.changeTab.bind(this); \n  }\n\n  handleclick(event){\n  /*  let fields = {};\n    let errors={};\n    if(this.refs.district.value===\"\"){ \n      console.log(\"state\", this.state.state);\n       errors[\"district\"] = \"Please select State.\";\n       errors[\"districtCovered\"] = \"Please select State.\";\n    }*/\n  }\n  handleChange(event){\n    event.preventDefault();\n    this.setState({\n      \"typeOfCenter\"             : this.refs.typeOfCenter.value,\n      \"nameOfCenter\"             : this.refs.nameOfCenter.value,\n      \"address\"                  : this.refs.address.value,\n      \"state\"                    : this.refs.state.value,\n      \"district\"                 : this.refs.district.value,\n      \"pincode\"                  : this.refs.pincode.value,\n      \"centerInchargeName\"       : this.refs.centerInchargeName.value,\n      \"centerInchargeContact\"    : this.refs.centerInchargeContact.value,\n      \"centerInchargeEmail\"      : this.refs.centerInchargeEmail.value,\n      \"MISCoordinatorName\"       : this.refs.MISCoordinatorName.value,\n      \"MISCoordinatorContact\"    : this.refs.MISCoordinatorContact.value,\n      \"MISCoordinatorEmail\"      : this.refs.MISCoordinatorEmail.value,\n      \"districtCovered\"          : this.refs.districtCovered.value,\n      \"blockCovered\"             : this.refs.blockCovered.value,\n    });\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      fields\n    });\n  \n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n  isNumberKey(evt){\n    var charCode = (evt.which) ? evt.which : evt.keyCode\n    if (charCode > 31 && (charCode < 48 || charCode > 57)  && (charCode < 96 || charCode > 105))\n    {\n    evt.preventDefault();\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n  isTextKey(evt)  {\n   var charCode = (evt.which) ? evt.which : evt.keyCode;\n   if (charCode!=189 && charCode > 32 && (charCode < 65 || charCode > 90) )\n   {\n    evt.preventDefault();\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n  Submit(event){\n    event.preventDefault();\n    var selectedVillages = this.state.selectedVillages;\n    if (this.validateForm() && this.validateFormReq()) {\n      var districtsCovered  = _.pluck(_.uniq(this.state.selectedVillages, function(x){return x.state;}), 'district');\n\n      var selectedBlocks    = _.uniq(this.state.selectedVillages, function(x){return x.block;});\n      var blocksCovered   = selectedBlocks.map((a, index)=>{ return _.omit(a, 'village');});\n\n      var id2 = this.state.uID;\n      var centerDetail= \n      {\n        \"type\"                      : this.refs.typeOfCenter.value,\n        \"centerName\"                : this.refs.nameOfCenter.value,\n        \"address\"                   : {\n            \"addressLine\"           : this.refs.address.value,\n            \"state\"                 : this.refs.state.value.split('|')[0],\n            \"district\"              : this.refs.district.value,\n            \"pincode\"               : this.refs.pincode.value,\n            \"stateCode\"             : this.refs.state.value.split('|')[1],\n        },\n        \"districtsCovered\"          : districtsCovered,\n        \"blocksCovered\"             : blocksCovered,\n        \"villagesCovered\"           : this.state.selectedVillages,\n        \"centerInchargeName\"        : this.refs.centerInchargeName.value,\n        \"centerInchargeMobile\"      : this.refs.centerInchargeContact.value,\n        \"centerInchargeEmail\"       : this.refs.centerInchargeEmail.value,\n        \"misCoordinatorName\"        : this.refs.MISCoordinatorName.value,\n        \"misCoordinatorMobile\"      : this.refs.MISCoordinatorContact.value,\n        \"misCoordinatorEmail\"       : this.refs.MISCoordinatorEmail.value,\n      };\n\n      // console.log(\"centerDetail\",centerDetail);\n      let fields = {};\n      fields[\"typeOfCenter\"]           = \"\";\n      fields[\"nameOfCenter\"]           = \"\";\n      fields[\"address\"]                = \"\";\n      fields[\"state\"]                  = \"\";\n      fields[\"district\"]               = \"\";\n      fields[\"pincode\"]                = \"\";\n      fields[\"centerInchargeName\"]     = \"\";\n      fields[\"centerInchargeContact\"]  = \"\";\n      fields[\"centerInchargeEmail\"]    = \"\";\n      fields[\"MISCoordinatorName\"]     = \"\";\n      fields[\"MISCoordinatorContact\"]  = \"\";\n      fields[\"MISCoordinatorEmail\"]    = \"\";\n      fields[\"districtCovered\"]        = \"\";\n      fields[\"blockCovered\"]           = \"\";\n\n      // console.log('centerDetail',centerDetail);\n      axios.post('/api/centers',centerDetail)\n      .then((response)=>{\n        this.getData(this.state.startRange, this.state.limitRange);\n        swal({\n          title : response.data.message,\n          text  : response.data.message\n        });\n      })\n      .catch(function(error){\n        \n      });\n\n      this.setState({\n        \"typeOfCenter\"              : \"\",\n        \"nameOfCenter\"              : \"\",\n        \"address\"                   : \"\",\n        \"state\"                     : \"\",\n        \"district\"                  : \"\",\n        \"pincode\"                   : \"\",\n        \"centerInchargeName\"        : \"\",\n        \"centerInchargeContact\"     : \"\",\n        \"centerInchargeEmail\"       : \"\",\n        \"MISCoordinatorName\"        : \"\",\n        \"MISCoordinatorContact\"     : \"\",\n        \"MISCoordinatorEmail\"       : \"\",\n        \"districtCovered\"           : \"\",\n        \"blockCovered\"              : \"\",\n        \"selectedVillages\"          : [],\n        \"listofDistrict\"            : [],\n        \"listofBlocks\"              : [],\n        \"listofVillages\"            : [],\n        \"fields\"                    : fields\n      });\n      selectedVillages.map((a ,i)=>{this.setState({[a.village] : false})});\n    }\n  }\n  Update(event){\n    event.preventDefault();\n    var selectedVillages = this.state.selectedVillages;\n    if(this.refs.address.value == \"\" || this.refs.typeOfCenter.value ==\"\" || this.refs.nameOfCenter.value==\"\" \n      || this.refs.district.value==\"\" || this.refs.pincode.value==\"\" || this.refs.centerInchargeName.value==\"\" \n      || this.refs.centerInchargeContact.value==\"\" || this.refs.centerInchargeEmail.value==\"\" || this.refs.MISCoordinatorName.value==\"\" \n      || this.refs.MISCoordinatorContact.value==\"\" || this.refs.MISCoordinatorEmail.value==\"\")\n     {\n        console.log('state validation');\n        if (this.validateForm() && this.validateFormReq()){\n          console.log('abc');\n        }\n      }else{\n\n        var districtsCovered  = _.pluck(_.uniq(this.state.selectedVillages, function(x){return x.state;}), 'district');\n        var selectedBlocks    = _.uniq(this.state.selectedVillages, function(x){return x.block;});\n        var blocksCovered   = selectedBlocks.map((a, index)=>{ return _.omit(a, 'village');});\n\n        var centerDetail = {\n          \"center_ID\"                : this.state.editId,\n          \"centerName\"                : this.refs.nameOfCenter.value,\n          \"type\"                      : this.refs.typeOfCenter.value,\n          \"address\"                   : {\n              \"addressLine\"           : this.refs.address.value,\n              \"state\"                 : this.refs.state.value.split('|')[0],\n              \"district\"              : this.refs.district.value,\n              \"pincode\"               : this.refs.pincode.value,\n              \"stateCode\"             : this.refs.state.value.split('|')[1],\n          },\n          \"districtsCovered\"          : districtsCovered,\n          \"blocksCovered\"             : blocksCovered,\n          \"villagesCovered\"           : this.state.selectedVillages,\n          \"centerInchargeName\"        : this.refs.centerInchargeName.value,\n          \"centerInchargeMobile\"      : this.refs.centerInchargeContact.value,\n          \"centerInchargeEmail\"       : this.refs.centerInchargeEmail.value,\n          \"misCoordinatorName\"        : this.refs.MISCoordinatorName.value,\n          \"misCoordinatorMobile\"      : this.refs.MISCoordinatorContact.value,\n          \"misCoordinatorEmail\"       : this.refs.MISCoordinatorEmail.value,\n        };\n      \n        let fields = {};\n        fields[\"typeOfCenter\"] = \"\";\n        fields[\"nameOfCenter\"] = \"\";\n        fields[\"address\"] = \"\";\n        fields[\"state\"] = \"\";\n        fields[\"district\"] = \"\";\n        fields[\"pincode\"] = \"\";\n        fields[\"centerInchargeName\"] = \"\";\n        fields[\"centerInchargeContact\"] = \"\";\n        fields[\"centerInchargeEmail\"] = \"\";\n        fields[\"MISCoordinatorName\"] = \"\";\n        fields[\"MISCoordinatorContact\"] = \"\";\n        fields[\"MISCoordinatorEmail\"] = \"\";\n        fields[\"districtCovered\"] = \"\";\n        fields[\"blockCovered\"] = \"\";\n        // console.log('centerDetail', centerDetail);\n        axios.patch('/api/centers',centerDetail)\n        .then((response)=>{\n          console.log('response',response);\n          this.getData(this.state.startRange, this.state.limitRange);\n          swal({\n            title : response.data.message,\n            text  : response.data.message\n          });\n        })\n        .catch(function(error){\n          \n        });\n\n        this.setState({\n          \"typeOfCenter\"              : \"\",\n          \"nameOfCenter\"              : \"\",\n          \"address\"                   : \"\",\n          \"state\"                     : \"\",\n          \"district\"                  : \"\",\n          \"pincode\"                   : \"\",\n          \"centerInchargeName\"        : \"\",\n          \"centerInchargeContact\"     : \"\",\n          \"centerInchargeEmail\"       : \"\",\n          \"MISCoordinatorName\"        : \"\",\n          \"MISCoordinatorContact\"     : \"\",\n          \"MISCoordinatorEmail\"       : \"\",\n          \"districtCovered\"           : \"\",\n          \"blockCovered\"              : \"\",\n          \"selectedVillages\"          : [],\n          \"listofDistrict\"            : [],\n          \"listofBlocks\"              : [],\n          \"listofVillages\"            : [],\n          \"fields\"                    : fields\n        });\n        selectedVillages.map((a ,i)=>{this.setState({[a.village] : false})});\n    } \n    this.props.history.push('/center-details');\n    this.setState({\n      \"editId\"              : \"\",\n    });\n  }\n  validateFormReq() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n\n      if (!fields[\"typeOfCenter\"]) {\n        formIsValid = false;\n        errors[\"typeOfCenter\"] = \"This field is required.\";\n      }     \n      if (!fields[\"nameOfCenter\"]) {\n        formIsValid = false;\n        errors[\"nameOfCenter\"] = \"This field is required.\";\n      }\n      if (!fields[\"address\"]) {\n        formIsValid = false;\n        errors[\"address\"] = \"This field is required.\";\n      }\n      if (!fields[\"state\"]) {\n          formIsValid = false;\n          errors[\"state\"] = \"This field is required.\";\n      }\n      if (!fields[\"district\"]) {\n        formIsValid = false;\n        errors[\"district\"] = \"This field is required.\";\n      }          \n      if (!fields[\"pincode\"]) {\n        formIsValid = false;\n        errors[\"pincode\"] = \"This field is required.\";\n      }          \n      if (!fields[\"centerInchargeName\"]) {\n        formIsValid = false;\n        errors[\"centerInchargeName\"] = \"This field is required.\";\n      }          \n      if (!fields[\"centerInchargeContact\"]) {\n        formIsValid = false;\n        errors[\"centerInchargeContact\"] = \"This field is required.\";\n      }          \n      if (!fields[\"centerInchargeEmail\"]) {\n        formIsValid = false;\n        errors[\"centerInchargeEmail\"] = \"This field is required.\";\n      }          \n      if (!fields[\"MISCoordinatorName\"]) {\n        formIsValid = false;\n        errors[\"MISCoordinatorName\"] = \"This field is required.\";\n      }          \n      if (!fields[\"MISCoordinatorContact\"]) {\n        formIsValid = false;\n        errors[\"MISCoordinatorContact\"] = \"This field is required.\";\n      }          \n      if (!fields[\"MISCoordinatorEmail\"]) {\n        formIsValid = false;\n        errors[\"MISCoordinatorEmail\"] = \"This field is required.\";\n      }          \n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n  }\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n    \n      if (typeof fields[\"centerInchargeEmail\"] !== \"undefined\") {\n        //regular expression for email validation\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$|^$)/i);\n        if (!pattern.test(fields[\"centerInchargeEmail\"])) {\n          formIsValid = false;\n          errors[\"centerInchargeEmail\"] = \"Please enter valid Email.\";\n        }\n      }\n      if (typeof fields[\"MISCoordinatorEmail\"] !== \"undefined\") {\n        //regular expression for email validation\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$|^$)/i);\n        if (!pattern.test(fields[\"MISCoordinatorEmail\"])) {\n          formIsValid = false;\n          errors[\"MISCoordinatorEmail\"] = \"Please enter valid Email.\";\n        }\n      }\n      if (typeof fields[\"centerInchargeContact\"] !== \"undefined\") {\n        if (!fields[\"centerInchargeContact\"].match(/^[0-9]{10}$|^$/)) {\n          formIsValid = false;\n          errors[\"centerInchargeContact\"] = \"Please enter valid mobile no.\";\n        }\n      }\n      if (typeof fields[\"MISCoordinatorContact\"] !== \"undefined\") {\n        if (!fields[\"MISCoordinatorContact\"].match(/^[0-9]{10}$|^$/)) {\n          formIsValid = false;\n          errors[\"MISCoordinatorContact\"] = \"Please enter valid mobile no.\";\n        }\n      }\n      if (typeof fields[\"pincode\"] !== \"undefined\") {\n        if (!fields[\"pincode\"].match(/^[0-9]{6}$|^$/)) {\n          formIsValid = false;\n          errors[\"pincode\"] = \"Please enter valid Pincode.\";\n        }\n      }\n      if (typeof fields[\"nameOfCenter\"] !== \"undefined\") {\n        // if (!fields[\"beneficiaryID\"].match(/^(?!\\s*$)[-a-zA-Z0-9_:,.' ']{1,100}$/)) {\n        if (!fields[\"nameOfCenter\"].match(/^[_A-z]*((-|\\s)*[_A-z])*$|^$/)) {\n          formIsValid = false;\n          errors[\"nameOfCenter\"] = \"Please enter valid Center Name.\";\n        }\n      }\n      if (typeof fields[\"centerInchargeName\"] !== \"undefined\") {\n        // if (!fields[\"beneficiaryID\"].match(/^(?!\\s*$)[-a-zA-Z0-9_:,.' ']{1,100}$/)) {\n        if (!fields[\"centerInchargeName\"].match(/^[_A-z]*((-|\\s)*[_A-z])*$|^$/)) {\n          formIsValid = false;\n          errors[\"centerInchargeName\"] = \"Please enter valid Name.\";\n        }\n      }\n      if (typeof fields[\"MISCoordinatorName\"] !== \"undefined\") {\n        // if (!fields[\"beneficiaryID\"].match(/^(?!\\s*$)[-a-zA-Z0-9_:,.' ']{1,100}$/)) {\n        if (!fields[\"MISCoordinatorName\"].match(/^[_A-z]*((-|\\s)*[_A-z])*$|^$/)) {\n          formIsValid = false;\n          errors[\"MISCoordinatorName\"] = \"Please enter valid Name.\";\n        }\n      }/*\n      if (typeof fields[\"address\"] !== \"undefined\") {\n        // if (!fields[\"beneficiaryID\"].match(/^(?!\\s*$)[-a-zA-Z0-9_:,.' ']{1,100}$/)) {\n        if (!fields[\"address\"].match(/^[_A-z0-9]*((-|\\s)*[_A-z0-9])*$|^$/)) {\n          formIsValid = false;\n          errors[\"address\"] = \"Please enter valid Address.\";\n        }\n      }    */     \n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n  }\n  componentDidMount() {\n    if(this.state.editId){      \n      this.edit(this.state.editId);\n    }\n    this.getLength();\n    this.getState();\n    this.getData(this.state.startRange, this.state.limitRange);\n  }\n  componentWillReceiveProps(nextProps){\n    var editId = nextProps.match.params.id;\n    if(nextProps.match.params.id){\n      this.setState({\n        editId : editId\n      })\n      this.edit(editId);\n    }\n    if(nextProps){\n      this.getLength();\n    }\n  }\n  \n  edit(id){\n    axios({\n      method: 'get',\n      url: '/api/centers/'+id,\n    }).then((response)=> {\n      var editData = response.data[0];\n      editData.villagesCovered.map((data, i)=>{\n        this.setState({\n          [data.village] : true\n        })\n      })\n      console.log(\"editData\",editData);\n      this.getDistrict(editData.address.stateCode);\n      this.getBlock(editData.address.stateCode, editData.address.district);\n      this.getVillages(editData.address.stateCode, editData.address.district, editData.blockCovered);\n      this.setState({\n        \"typeOfCenter\"             : editData.type,\n        \"nameOfCenter\"             : editData.centerName,\n        \"address\"                  : editData.address.addressLine, \n        \"state\"                    : editData.address.state+'|'+editData.address.stateCode,\n        \"district\"                 : editData.address.district,\n        \"pincode\"                  : editData.address.pincode,\n        \"centerInchargeName\"       : editData.centerInchargeName,\n        \"centerInchargeContact\"    : editData.centerInchargeMobile,\n        \"centerInchargeEmail\"      : editData.centerInchargeEmail,\n        \"MISCoordinatorName\"       : editData.misCoordinatorName,\n        \"MISCoordinatorContact\"    : editData.misCoordinatorMobile,\n        \"MISCoordinatorEmail\"      : editData.misCoordinatorEmail,\n        \"selectedVillages\"         : editData.villagesCovered,\n        \"districtCovered\"          : \"\",\n        \"blockCovered\"             : \"\",\n        \"villagesCovered\"          : editData.villagesCovered,\n      },()=>{\n        console.log(this.state)\n      });\n    }).catch(function (error) {\n    });\n  }\n  getLength(){\n    axios.get('/api/centers/count')\n    .then((response)=>{\n      // console.log('response', response.data);\n      this.setState({\n        dataCount : response.data.dataLength\n      },()=>{\n        // console.log('dataCount', this.state.dataCount);\n      })\n    })\n    .catch(function(error){      \n    });\n  }\n\n  getData(startRange, limitRange){\n    var data = {\n      limitRange : limitRange,\n      startRange : startRange,\n    }\n       axios.post('/api/centers/list',data)\n      .then((response)=>{\n        // console.log('response', response.data);\n        var tableData = response.data.map((a, i)=>{\n        return {\n          _id                       : a._id,\n          type                      : a.type,\n          centerName                : a.centerName,\n          places                    : a.address,\n          centerInchargeDetail      : a.centerInchargeDetail,\n          misCoordinatorDetail      : a.misCoordinatorDetail,\n          numberofVillage           : a.numberofVillage,\n        }\n      })\n        this.setState({\n          tableData : tableData\n        })\n      })\n      .catch(function(error){\n        \n      });\n/*\n      var listofStates = ['Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh','Maharashtra'];\n      this.setState({\n        listofStates : listofStates\n      })*/\n  }\n  componentWillMount(){\n        // window.location.reload(true);\n  }\n  \n  getState(){\n    axios({\n      method: 'get',\n      url: 'http://locationapi.iassureit.com/api/states/get/list/IN',\n    }).then((response)=> {\n        // console.log('response ==========', response.data);\n        this.setState({\n          listofStates : response.data\n        },()=>{\n        // console.log('listofStates', this.state.listofStates);\n        })\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n  selectState(event){\n    event.preventDefault();\n    var selectedState = event.target.value;\n    this.setState({\n      state : selectedState,\n    },()=>{\n      var stateCode = this.state.state.split('|')[1];\n      // console.log('state', stateCode);\n      this.setState({\n        stateCode :stateCode\n      },()=>{\n      console.log('stateCode',this.state.stateCode);\n      this.getDistrict(this.state.stateCode);\n      })\n    });\n    this.handleChange(event);\n  }\n  getDistrict(stateCode){\n    axios({\n      method: 'get',\n      url: 'http://locationapi.iassureit.com/api/districts/get/list/'+stateCode+'/IN',\n    }).then((response)=> {\n        // console.log('response ==========', response.data);\n        this.setState({\n          listofDistrict : response.data\n        },()=>{\n        console.log('listofDistrict', this.state.listofDistrict);\n        })\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n  districtCoveredChange(event){    \n    event.preventDefault();\n    var districtCovered = event.target.value;\n    // console.log('districtCovered', districtCovered);\n    this.setState({\n      districtCovered: districtCovered\n    },()=>{\n      var selectedDistrict = this.state.districtCovered.split('|')[0];\n      console.log(\"selectedDistrict\",selectedDistrict);\n      this.setState({\n        selectedDistrict :selectedDistrict\n      },()=>{\n      console.log('selectedDistrict',this.state.selectedDistrict);\n      this.getBlock(this.state.stateCode, this.state.selectedDistrict);\n      })\n    });\n  }\n  getBlock(stateCode, selectedDistrict){\n    axios({\n      method: 'get',\n      url: 'http://locationapi.iassureit.com/api/blocks/get/list/'+selectedDistrict+'/'+stateCode+'/IN',\n    }).then((response)=> {\n        console.log('response ==========', response.data);\n        this.setState({\n          listofBlocks : response.data\n        },()=>{\n        console.log('listofBlocks', this.state.listofBlocks);\n        })\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n  selectBlock(event){\n    event.preventDefault();\n    var blockCovered = event.target.value;\n    this.setState({\n      blockCovered : blockCovered\n    },()=>{\n      console.log(\"blockCovered\",blockCovered);\n      this.getVillages(this.state.stateCode, this.state.selectedDistrict, this.state.blockCovered);\n    });\n  }\n  getVillages(stateCode, selectedDistrict, blockCovered){\n    console.log(stateCode, selectedDistrict, blockCovered);\n    axios({\n      method: 'get',\n      url: 'http://locationapi.iassureit.com/api/cities/get/list/'+blockCovered+'/'+selectedDistrict+'/'+stateCode+'/IN',\n    }).then((response)=> {\n        console.log('response ==========', response.data);\n        this.setState({\n          listofVillages : response.data\n        },()=>{\n        console.log('listofVillages', this.state.listofVillages);\n        })\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n  selectVillage(event){\n    var selectedVillages = this.state.selectedVillages;\n\n    var value = event.target.checked;\n    var id    = event.target.id;\n\n    this.setState({\n      [id] : value\n    },()=>{\n      console.log('village', this.state[id], id);\n      if(this.state[id] == true){\n        selectedVillages.push({\n          district  : this.refs.districtCovered.value,\n          block     : this.refs.blockCovered.value,\n          village   : id\n        });\n        this.setState({\n          selectedVillages : selectedVillages\n        });\n        console.log('selectedVillages', selectedVillages);\n      }else{\n        var index = selectedVillages.findIndex(v => v.village === id);\n        // console.log('index', index);\n        selectedVillages.splice(selectedVillages.findIndex(v => v.village === id), 1);\n        this.setState({\n          selectedVillages : selectedVillages\n        },()=>{\n          // console.log('selectedVillages',this.state.selectedVillages);\n        });\n      }\n    });      \n  }\n  editVillage(event){\n    event.preventDefault();\n    var id = event.target.id;\n    console.log('id',id);\n\n    var selectedVillages = this.state.selectedVillages[id];\n    console.log('selectedVillages', selectedVillages);\n  }\n  deleteVillage(event){\n    event.preventDefault();\n    var id = event.target.id;\n    console.log('id',id);\n    var selectedVillages = this.state.selectedVillages;\n    // console.log('index', index);\n    selectedVillages.splice(id, 1);\n    this.setState({\n      selectedVillages : selectedVillages\n    },()=>{\n      // console.log('selectedVillages',this.state.selectedVillages);\n    });\n  }\n/*  onclickDist(event){\n    event.preventDefault();\n    console.log('ghjg');\n\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    // $(\"html,body\").scrollTop(0);\n    console.log(!fields[\"state\"]);\n    if (!fields[\"state\"]) {\n      console.log('state errors');\n      formIsValid = false;\n      errors[\"state\"] = \"This field is required.\";\n    }       \n    this.setState({\n      errors: errors\n    });\n\n  }*/\n  getSearchText(searchText, startRange, limitRange){\n    this.setState({\n      tableData : []\n    })\n  }\n  changeTab = (data)=>{\n    this.setState({\n      tabtype : data,\n    })\n  }\n  render() {\n        // console.log('dataCount', this.state.dataCount, 'tableData', this.state.tableData);\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"formWrapper\">\n              <section className=\"content\">\n                <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent \">\n                  <div className=\"row\">\n                      <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 titleaddcontact\">\n                        <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 contactdeilsmg pageHeader\">\n                            Master Data                                     \n                         </div>\n                        <hr className=\"hr-head container-fluid row\"/>\n                      </div>\n                      <form className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 formLable\" id=\"Academic_details\">\n                        <div className=\"col-lg-12 \">\n                           <h4 className=\"pageSubHeader\">Center Details</h4>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\" col-lg-12 col-sm-12 col-xs-12 formLable boxHeight \">\n                            <div className=\" col-lg-6 col-md-6 col-sm-12 col-xs-12  \">\n                              <label className=\"formLable\">Select Type of Center</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"typeOfCenter\" >\n                                <select className=\"custom-select form-control inputBox\" value={this.state.typeOfCenter} ref=\"typeOfCenter\" name=\"typeOfCenter\" onChange={this.handleChange.bind(this)} >\n                                  <option  className=\"hidden\" >--Select Center--</option>\n                                  <option  className=\"\" >Development Center</option>\n                                  <option  className=\"\" >CSR Center</option>\n                                  <option  className=\"\" >ADP</option>\n                                </select>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.typeOfCenter}</div>\n                            </div>\n                            <div className=\" col-lg-6 col-md-6 col-sm-12 col-xs-12 \">\n                              <label className=\"formLable\">Name of Center</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\" id=\"nameOfCenter\" >\n                                <input type=\"text\"   className=\"form-control inputBox nameParts\"  value={this.state.nameOfCenter}  name=\"nameOfCenter\" placeholder=\"\" ref=\"nameOfCenter\"  onKeyDown={this.isTextKey.bind(this)}  onChange={this.handleChange.bind(this)}/>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.nameOfCenter}</div>\n                            </div>\n                          </div> \n                        </div><br/>\n                        <div className=\"row\">\n                          <div className=\" col-lg-12 col-sm-12 col-xs-12  boxHeight \">\n                            <div className=\" col-lg-3 col-md-3 col-sm-12 col-xs-12 \">\n                             <label className=\"formLable\">Address</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\" id=\"address\" >\n                                <input type=\"text\"   className=\"form-control inputBox nameParts\"  value={this.state.address}  name=\"address\" placeholder=\"\" ref=\"address\" onChange={this.handleChange.bind(this)}/>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.address}</div>\n                            </div>\n                            <div className=\" col-lg-3 col-md-3 col-sm-12 col-xs-12  \">\n                              <label className=\"formLable\">State</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"state\" >\n                                <select className=\"custom-select form-control inputBox\" value={this.state.state}  ref=\"state\" name=\"state\"  onChange={this.selectState.bind(this)} >\n                                  <option  className=\"hidden\" value=\"\">--Select--</option> \n                                  {\n                                    this.state.listofStates ?\n                                    this.state.listofStates.map((data, index)=>{\n                                      return(\n                                        <option key={index} value={data.stateName+'|'+data.stateCode}>{data.stateName}</option> \n                                      );\n                                    })\n                                    :\n                                    null\n                                  }\n                                </select>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.state}</div>\n                            </div>\n                            <div className=\" col-lg-3 col-md-3 col-sm-12 col-xs-12  \">\n                              <label className=\"formLable\">District</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"district\" >\n                                <select className=\"custom-select form-control inputBox\"  value={this.state.district}  ref=\"district\" name=\"district\" onClick={this.handleclick.bind(this)}  onChange={this.handleChange.bind(this)} >\n                                  <option  className=\"hidden\" >--Select District--</option>\n                                  {\n                                    this.state.listofDistrict && this.state.listofDistrict.length > 0 ? \n                                    this.state.listofDistrict.map((data, index)=>{\n                                      // console.log(data);\n                                      return(\n                                        <option key={index} value={data.districtName}>{data.districtName}</option>\n                                      );\n                                    })\n                                    :\n                                    <option disabled>Select select State first</option>\n                                  }                                \n                                </select>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.district}</div>\n                            </div>\n                            <div className=\" col-lg-3 col-md-3 col-sm-12 col-xs-12  \">\n                             <label className=\"formLable\">Pincode</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\" id=\"pincode\" >\n                                <input type=\"text\"   className=\"form-control inputBox \"  value={this.state.pincode}  name=\"pincode\" placeholder=\"\" ref=\"pincode\" maxLength=\"6\"  onKeyDown={this.isNumberKey.bind(this)}  onChange={this.handleChange.bind(this)}/>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.pincode}</div>\n                            </div>\n                          </div>\n                        </div><br/>\n                        <div className=\"row\">\n                          <div className=\" col-lg-12 col-sm-12 col-xs-12  boxHeight \">\n                            \n                            <div className=\" col-lg-4 col-md-4 col-sm-12 col-xs-12 \">\n                              <label className=\"formLable\">Name of Center Incharge</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\" id=\"centerInchargeName\" >\n                                <input type=\"text\"   className=\"form-control inputBox nameParts\"  value={this.state.centerInchargeName} name=\"centerInchargeName\" placeholder=\"\" ref=\"centerInchargeName\"  onKeyDown={this.isTextKey.bind(this)}   onChange={this.handleChange.bind(this)}/>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.centerInchargeName}</div>\n                            </div>\n                             <div className=\" col-lg-4 col-md-4 col-sm-12 col-xs-12 \">\n                              <label className=\"formLable\">Contact No. of Center Incharge</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\" id=\"centerInchargeContact\" >\n                                {/*<div className=\"input-group-addon inputIcon\">\n                                 <i className=\"fa fa-building fa iconSize14\"></i>\n                                </div>*/}\n                                <input type=\"text\"   className=\"form-control inputBox nameParts\"   value={this.state.centerInchargeContact} name=\"centerInchargeContact\" placeholder=\"\" ref=\"centerInchargeContact\" maxLength=\"10\" onKeyDown={this.isNumberKey.bind(this)}  onChange={this.handleChange.bind(this)}/>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.centerInchargeContact}</div>\n                            </div>\n                            <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12\">\n                              <label className=\"formLable\">Email of Center Incharge</label><span className=\"asterix\">*</span>\n                              <div className=\" col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"centerInchargeEmail\" >\n                                {/*<div className=\"input-group-addon inputIcon\">\n                                 <i className=\"fa fa-university fa iconSize14\"></i>\n                                </div>*/}\n                                <input type=\"text\" className=\"form-control inputBox \" name=\"centerInchargeEmail\"  value={this.state.centerInchargeEmail} placeholder=\"\" ref=\"centerInchargeEmail\" onChange={this.handleChange.bind(this)}/>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.centerInchargeEmail}</div>\n                            </div>\n                          </div> \n                        </div>\n                        <div className=\"row\">\n                          <div className=\" col-lg-12 col-sm-12 col-xs-12  boxHeight mt\">\n                            \n                            <div className=\" col-lg-4 col-md-4 col-sm-12 col-xs-12 \">\n                              <label className=\"formLable\">Name of MIS Coordinator</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\" id=\"MISCoordinatorName\" >\n                                {/*<div className=\"input-group-addon inputIcon\">\n                                 <i className=\"fa fa-building fa iconSize14\"></i>\n                                </div>*/}\n                                <input type=\"text\"   className=\"form-control inputBox nameParts\"  value={this.state.MISCoordinatorName}  name=\"MISCoordinatorName\" placeholder=\"\" ref=\"MISCoordinatorName\"  onKeyDown={this.isTextKey.bind(this)}  onChange={this.handleChange.bind(this)}/>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.MISCoordinatorName}</div>\n                            </div>\n                             <div className=\" col-lg-4 col-md-4 col-sm-12 col-xs-12 \">\n                              <label className=\"formLable\">Contact No. of MIS Coordinator</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12  input-group inputBox-main\" id=\"MISCoordinatorContact\" >\n                                {/*<div className=\"input-group-addon inputIcon\">\n                                 <i className=\"fa fa-building fa iconSize14\"></i>\n                                </div>*/}\n                                <input type=\"text\"   className=\"form-control inputBox \"  value={this.state.MISCoordinatorContact}  name=\"MISCoordinatorContact\" placeholder=\"\" ref=\"MISCoordinatorContact\" maxLength=\"10\" onKeyDown={this.isNumberKey.bind(this)}  onChange={this.handleChange.bind(this)}/>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.MISCoordinatorContact}</div>\n                            </div>\n                            <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12\">\n                              <label className=\"formLable\">Email of MIS Coordinator</label><span className=\"asterix\">*</span>\n                              <div className=\" col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"MISCoordinatorEmail\" >\n                                {/*<div className=\"input-group-addon inputIcon\">\n                                 <i className=\"fa fa-university fa iconSize14\"></i>\n                                </div>*/}\n                                <input type=\"text\" className=\"form-control inputBox \"  value={this.state.MISCoordinatorEmail}  name=\"MISCoordinatorEmail\" placeholder=\"\"ref=\"MISCoordinatorEmail\"  onChange={this.handleChange.bind(this)}/>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.MISCoordinatorEmail}</div>\n                            </div>\n                          </div> \n                        </div>\n                        <div className=\"col-lg-12 \">\n                           <hr />\n                        </div>\n                        <div className=\"col-lg-12\">\n                           <h5 className=\"pageSubHeader\">Villages Covered</h5>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\" col-lg-12 col-sm-12 col-xs-12  boxHeight\">\n                            <div className=\" col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                              <label className=\"formLable\">District Covered</label>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"districtCovered\" >\n                                <select className=\"custom-select form-control inputBox\"  value={this.state.districtCovered}  ref=\"districtCovered\" name=\"districtCovered\" onChange={this.districtCoveredChange.bind(this)} >\n                                  <option  className=\"hidden\" >--Select District--</option>\n                                  {\n                                    this.state.listofDistrict  && this.state.listofDistrict.length > 0 ? \n                                    this.state.listofDistrict.map((data, index)=>{\n                                      return(\n                                        <option key={index} value={data.districtName+'|'+data._id}>{data.districtName}</option>\n                                      );\n                                    })\n                                    :\n                                    <option disabled>Please select State first</option>\n                                  }\n                                </select>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.districtCovered}</div>\n                            </div>\n                            <div className=\" col-lg-6 col-md-6 col-sm-12 col-xs-12  \">\n                              <label className=\"formLable\">Block Covered</label>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"blockCovered\" >\n                                <select className=\"custom-select form-control inputBox\"  value={this.state.blockCovered}  ref=\"blockCovered\" name=\"blockCovered\"  onChange={this.selectBlock.bind(this)} >\n                                  <option  className=\"hidden\" >--Select Block--</option>\n                                  {\n                                    this.state.listofBlocks && this.state.listofBlocks.length > 0  ? \n                                    this.state.listofBlocks.map((data, index)=>{\n                                      return(\n                                        <option key={index} value={data.blockName}>{data.blockName}</option>\n                                      );\n                                    })\n                                    :\n                                    <option disabled>Please select District</option>\n                                  }\n                                </select>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.blockCovered}</div>\n                            </div>\n                          </div> \n                        </div>\n                        {\n                          this.state.listofVillages.length > 0 ?\n                          <div className=\"row\">\n                            <div className=\" col-lg-12 col-sm-12 col-xs-12 mt\">\n                              <h5 className=\"col-lg-12 col-sm-12 col-xs-12\">Villages Covered</h5>                     \n                            {\n                              this.state.listofVillages?\n                              this.state.listofVillages.map((data, index)=>{\n                            /*  this.setState({\n                                array : village,\n                              })*/\n                                return(\n                                  <div key={index} className=\"col-md-3  col-lg-3 col-sm-12 col-xs-12 mt\">\n                                    <div className=\"row\"> \n                                      <div className=\"col-lg-12 noPadding\">  \n                                       <div className=\"actionDiv\">\n                                          <div className=\"centerDetailContainer col-lg-1\">\n                                            <input type=\"checkbox\" id={data.cityName}  checked={this.state[data.cityName]?true:false} onChange={this.selectVillage.bind(this)}/>\n                                            <span className=\"centerDetailCheck\"></span>\n                                          </div>\n                                        </div>                            \n                                        <label className=\"centerDetaillistItem\"> {data.cityName}</label>\n                                      </div>\n                                    </div>  \n                                  </div>\n                                );\n                              })\n                              :\n                              null\n                            }\n                          </div>\n                        </div>\n                        : \n                        null\n                        }      \n                                   \n                        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                           <hr />\n                        </div>\n                        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                          <h5 className=\"\">Villages Covered</h5>                                     \n                          <table className=\"table iAssureITtable-bordered table-striped table-hover\">\n                            <thead className=\"tempTableHeader\">\n                              <tr>\n                                <th>District</th>\n                                <th>Block</th>\n                                <th>Villages</th>\n                                {/*<th>Actions</th>*/}\n                              </tr>\n                            </thead>\n                            <tbody>\n                            {\n                              this.state.selectedVillages && this.state.selectedVillages.length > 0 ? \n                              this.state.selectedVillages.map((data, index)=>{\n                                return(\n                                  <tr key={index}>\n                                    <td>{data.district.split('|')[0]}</td>\n                                    <td>{data.block}</td>\n                                    <td>{data.village}</td>\n                                    {/*<td>\n                                      <i className=\"fa fa-pencil\" id={index} onClick={this.editVillage.bind(this)}></i> &nbsp; &nbsp; \n                                      <i className=\"fa fa-trash redFont\" id={index} onClick={this.deleteVillage.bind(this)}></i>\n                                    </td>*/}\n                                  </tr>\n                                );\n                              })\n                              :\n                              <tr><td className=\"textAlignCenter\" colSpan=\"4\">Nothing to Display</td></tr>\n                            }\n                            </tbody>\n                          </table> \n                        </div>     \n                        <div className=\"col-lg-12\">\n                        {\n                          this.state.editId ? \n                          <button className=\" col-lg-2 btn submit mt pull-right\" onClick={this.Update.bind(this)}> Update </button>\n                          :\n                          <button className=\" col-lg-2 btn submit mt pull-right\" onClick={this.Submit.bind(this)}> Submit </button>\n                        }\n                        </div>                          \n                      </form>\n                      <div className=\"col-lg-12 \">\n                         <hr className=\"hr-head\"/>\n                      </div>\n                      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                        <IAssureTable \n                          tableHeading={this.state.tableHeading}\n                          twoLevelHeader={this.state.twoLevelHeader} \n                          dataCount={this.state.dataCount}\n                          tableData={this.state.tableData}\n                          getData={this.getData.bind(this)}\n                          tableObjects={this.state.tableObjects}\n                          getSearchText={this.getSearchText.bind(this)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              </div>\n            </div>\n          </div>\n        );\n      }\n}\nexport default centerDetail\n"]},"metadata":{},"sourceType":"module"}