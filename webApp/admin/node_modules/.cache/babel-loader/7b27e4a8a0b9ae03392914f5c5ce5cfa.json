{"ast":null,"code":"var _jsxFileName = \"/home/user/REACT PROJECTS/LFMIS/LupinMIS/webApp/admin/src/admin/annualPlan/PlanDetails.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport _ from 'underscore';\nimport IAssureTable from \"../../coreAdmin/IAssureTable/IAssureTable.jsx\";\nimport \"./PlanDetails.css\";\naxios.defaults.baseURL = 'http://qalmisapi.iassureit.com';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nclass PlanDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"center\": \"\",\n      \"sector_id\": \"\",\n      \"sectorName\": \"\",\n      \"subActivity\": \"\",\n      \"activityName\": \"\",\n      \"physicalUnit\": \"\",\n      \"unitCost\": \"\",\n      \"totalBudget\": \"\",\n      \"noOfBeneficiaries\": \"\",\n      \"LHWRF\": \"\",\n      \"NABARD\": \"\",\n      \"bankLoan\": \"\",\n      \"govtscheme\": \"\",\n      \"directCC\": \"\",\n      \"indirectCC\": \"\",\n      \"other\": \"\",\n      \"remark\": \"\",\n      \"shown\": true,\n      \"uID\": \"\",\n\n      /*      \"month\"               :\"Annually\",*/\n      \"heading\": \"Monthly Plan\",\n      \"months\": [\"All Months\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\"],\n      \"years\": [\"FY 2019 - 2020\", \"FY 2020 - 2021\", \"FY 2021 - 2022\"],\n      \"shown\": true,\n      \"twoLevelHeader\": {\n        apply: true,\n        firstHeaderData: [{\n          heading: 'Activity Details',\n          mergedColoums: 10\n        }, {\n          heading: 'Source of Fund',\n          mergedColoums: 8\n        }, {\n          heading: '',\n          mergedColoums: 1\n        }, {\n          heading: '',\n          mergedColoums: 1\n        }]\n      },\n      \"tableHeading\": {\n        month: \"Month\",\n        year: \"Year\",\n        sectorName: \"Sector\",\n        activityName: \"Activity\",\n        subactivityName: \"Sub-Activity\",\n        unit: \"Unit\",\n        physicalUnit: \"Physical Unit\",\n        unitCost: \"Unit Cost\",\n        totalBudget: \"Total Cost\",\n        noOfBeneficiaries: \"No. Of Beneficiaries\",\n        LHWRF: \"LHWRF\",\n        NABARD: \"NABARD\",\n        bankLoan: \"Bank Loan\",\n        govtscheme: \"Govt. Scheme\",\n        directCC: \"Direct Community Contribution\",\n        indirectCC: \"Indirect Community Contribution\",\n        other: \"Other\",\n        remark: \"Remark\",\n        actions: 'Action'\n      },\n      \"tableObjects\": {\n        deleteMethod: 'delete',\n        apiLink: '/api/annualPlans/',\n        paginationApply: true,\n        searchApply: true,\n        editUrl: '/plan/'\n      },\n      \"startRange\": 0,\n      \"limitRange\": 10,\n      \"editId\": this.props.match.params ? this.props.match.params.id : '',\n      fields: {},\n      errors: {},\n      subActivityDetails: [],\n      apiCall: '/api/annualPlans'\n    };\n  }\n\n  handleChange(event) {\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      [event.target.name]: event.target.value,\n      fields\n    });\n\n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n\n  selectMonth(event) {\n    event.preventDefault();\n    var tableObjects = this.state.tableObjects;\n    tableObjects[\"apiLink\"] = this.refs.month.value == 'All Months' ? '/api/annualPlans/' : '/api/monthlyPlans/';\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      \"years\": this.refs.month.value == 'All Months' ? [\"FY 2019 - 2020\", \"FY 2020 - 2021\", \"FY 2021 - 2022\"] : [2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035],\n      \"month\": this.refs.month.value,\n      \"apiCall\": this.refs.month.value == 'All Months' ? '/api/annualPlans' : '/api/monthlyPlans',\n      \"sectorName\": \"\",\n      \"activityName\": \"\",\n      \"availableSubActivity\": \"\",\n      tableObjects,\n      fields\n    }, () => {\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n\n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n\n  subActivityDetails(event) {\n    event.preventDefault();\n    let fields = this.state.fields;\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n\n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n\n    var subActivityDetails = this.state.subActivityDetails;\n    var id = event.target.name.split('-')[1];\n    var idExist = subActivityDetails.filter(a => {\n      return a.subactivity_ID == id;\n    });\n    var name = event.target.name.split('-')[0];\n\n    if (idExist.length > 0) {\n      for (var i = 0; i < subActivityDetails.length; i++) {\n        if (subActivityDetails[i].subactivity_ID == id) {\n          subActivityDetails[i][name] = event.target.value;\n        }\n      }\n    } else {\n      subActivityDetails.push({\n        \"subactivity_ID\": id,\n        \"subactivityName\": document.getElementById('subActivityName-' + id).innerHTML,\n        \"unit\": document.getElementById('unit-' + id).innerHTML,\n        [name]: event.target.value\n      });\n    }\n\n    this.setState({\n      subActivityDetails: subActivityDetails\n    });\n  }\n\n  SubmitAnnualPlan(event) {\n    event.preventDefault();\n    var subActivityDetails = this.state.subActivityDetails;\n\n    if (this.validateFormReq() && this.validateForm()) {\n      let fields = {};\n      fields[\"year\"] = \"\";\n      fields[\"month\"] = \"\";\n      fields[\"sectorName\"] = \"\";\n      fields[\"activityName\"] = \"\";\n      fields[\"physicalUnit\"] = \"\";\n      fields[\"unitCost\"] = \"\";\n      fields[\"totalBudget\"] = \"\";\n      fields[\"noOfBeneficiaries\"] = \"\";\n      fields[\"LHWRF\"] = \"\";\n      fields[\"NABARD\"] = \"\";\n      fields[\"bankLoan\"] = \"\";\n      fields[\"govtscheme\"] = \"\";\n      fields[\"directCC\"] = \"\";\n      fields[\"indirectCC\"] = \"\";\n      fields[\"other\"] = \"\";\n      fields[\"remark\"] = \"\";\n\n      if (subActivityDetails.length > 0) {\n        for (var i = 0; i < subActivityDetails.length; i++) {\n          var planValues = {\n            \"month\": this.refs.month.value,\n            \"year\": this.refs.year.value,\n            \"center_ID\": \"P01\",\n            \"center\": \"Pune\",\n            \"sector_ID\": this.refs.sectorName.value.split('|')[1],\n            \"sectorName\": this.refs.sectorName.value.split('|')[0],\n            \"activity_ID\": this.refs.activityName.value.split('|')[1],\n            \"activityName\": this.refs.activityName.value.split('|')[0],\n            \"subactivity_ID\": subActivityDetails[i].subactivity_ID,\n            \"subactivityName\": subActivityDetails[i].subactivityName,\n            \"unit\": subActivityDetails[i].unit,\n            \"physicalUnit\": subActivityDetails[i].physicalUnit,\n            \"unitCost\": subActivityDetails[i].unitCost,\n            \"totalBudget\": subActivityDetails[i].totalBudget,\n            \"noOfBeneficiaries\": subActivityDetails[i].noOfBeneficiaries,\n            \"LHWRF\": subActivityDetails[i].LHWRF,\n            \"NABARD\": subActivityDetails[i].NABARD,\n            \"bankLoan\": subActivityDetails[i].bankLoan,\n            \"govtscheme\": subActivityDetails[i].govtscheme,\n            \"directCC\": subActivityDetails[i].directCC,\n            \"indirectCC\": subActivityDetails[i].indirectCC,\n            \"other\": subActivityDetails[i].other,\n            \"remark\": subActivityDetails[i].remark\n          };\n          axios.post(this.state.apiCall, planValues).then(response => {\n            swal({\n              title: response.data.message,\n              text: response.data.message\n            });\n            this.getData(this.state.startRange, this.state.limitRange);\n          }).catch(function (error) {\n            console.log(\"error\" + error);\n          });\n          Object.entries(planValues).map(([key, value], i) => {\n            this.setState({\n              [key + '-' + this.state.subactivity_ID]: \"\"\n            });\n          });\n        }\n      } else {\n        swal({\n          title: \"abc\",\n          text: \"Please fill atleast one SubActivity Details.\"\n        });\n      }\n\n      this.setState({\n        \"planValues\": \"\",\n        \"year\": \"\",\n        \"month\": \"\",\n        \"center\": \"\",\n        \"sector_id\": \"\",\n        \"sectorName\": \"\",\n        \"activityName\": \"\",\n        \"physicalUnit\": \"\",\n        \"unitCost\": \"\",\n        \"totalBudget\": \"\",\n        \"noOfBeneficiaries\": \"\",\n        \"LHWRF\": \"\",\n        \"NABARD\": \"\",\n        \"bankLoan\": \"\",\n        \"govtscheme\": \"\",\n        \"directCC\": \"\",\n        \"indirectCC\": \"\",\n        \"other\": \"\",\n        \"remark\": \"\",\n        \"fields\": fields,\n        \"editId\": \"\",\n        \"subActivityDetails\": [],\n        \"availableSubActivity\": [],\n        \"availableActivity\": [],\n        shown: !this.state.shown\n      });\n    }\n  }\n\n  Update(event) {\n    event.preventDefault();\n    var subActivityDetails = this.state.subActivityDetails;\n\n    if (this.refs.year.value == \"\" || this.refs.month.value == \"\" || this.refs.sectorName.value == \"\" || this.refs.activityName.value == \"\" || this.refs.physicalUnit.value == \"\" || this.refs.unitCost.value == \"\" || this.refs.totalBudget.value == \"\" || this.refs.noOfBeneficiaries.value == \"\" || this.refs.LHWRF.value == \"\" || this.refs.NABARD.value == \"\" || this.refs.bankLoan.value == \"\" || this.refs.govtscheme.value == \"\" || this.refs.directCC.value == \"\" || this.refs.indirectCC.value == \"\" || this.refs.other.value == \"\" || this.refs.remark.value == \"\") {\n      if (this.validateFormReq() && this.validateForm()) {}\n    } else {\n      let fields = {};\n      fields[\"year\"] = \"\";\n      fields[\"month\"] = \"\";\n      fields[\"sectorName\"] = \"\";\n      fields[\"activityName\"] = \"\";\n      fields[\"physicalUnit\"] = \"\";\n      fields[\"unitCost\"] = \"\";\n      fields[\"totalBudget\"] = \"\";\n      fields[\"noOfBeneficiaries\"] = \"\";\n      fields[\"LHWRF\"] = \"\";\n      fields[\"NABARD\"] = \"\";\n      fields[\"bankLoan\"] = \"\";\n      fields[\"govtscheme\"] = \"\";\n      fields[\"directCC\"] = \"\";\n      fields[\"indirectCC\"] = \"\";\n      fields[\"other\"] = \"\";\n      fields[\"remark\"] = \"\";\n\n      if (subActivityDetails.length > 0) {\n        for (var i = 0; i < subActivityDetails.length; i++) {\n          var planValues = {\n            \"annualPlan_ID\": this.state.editId,\n            \"monthlyPlan_ID\": this.state.editId,\n            \"month\": this.refs.month.value,\n            \"year\": this.refs.year.value,\n            \"center_ID\": \"P01\",\n            \"center\": \"Pune\",\n            \"sector_ID\": this.refs.sectorName.value.split('|')[1],\n            \"sectorName\": this.refs.sectorName.value.split('|')[0],\n            \"activity_ID\": this.refs.activityName.value.split('|')[1],\n            \"activityName\": this.refs.activityName.value.split('|')[0],\n            \"subactivity_ID\": subActivityDetails[i].subactivity_ID,\n            \"subactivityName\": subActivityDetails[i].subactivityName,\n            \"unit\": subActivityDetails[i].unit,\n            \"physicalUnit\": subActivityDetails[i].physicalUnit,\n            \"unitCost\": subActivityDetails[i].unitCost,\n            \"totalBudget\": subActivityDetails[i].totalBudget,\n            \"noOfBeneficiaries\": subActivityDetails[i].noOfBeneficiaries,\n            \"LHWRF\": subActivityDetails[i].LHWRF,\n            \"NABARD\": subActivityDetails[i].NABARD,\n            \"bankLoan\": subActivityDetails[i].bankLoan,\n            \"govtscheme\": subActivityDetails[i].govtscheme,\n            \"directCC\": subActivityDetails[i].directCC,\n            \"indirectCC\": subActivityDetails[i].indirectCC,\n            \"other\": subActivityDetails[i].other,\n            \"remark\": subActivityDetails[i].remark\n          };\n          axios.patch(this.state.apiCall + '/update', planValues).then(response => {\n            swal({\n              title: response.data.message,\n              text: response.data.message\n            });\n            this.props.history.push('/plan');\n            this.getData(this.state.startRange, this.state.limitRange);\n          }).catch(function (error) {\n            console.log(\"error\" + error);\n          });\n          Object.entries(planValues).map(([key, value], i) => {\n            this.setState({\n              [key + '-' + this.state.subactivity_ID]: \"\"\n            });\n          });\n        }\n      }\n\n      this.setState({\n        \"year\": \"\",\n        \"month\": \"All Months\",\n        \"center\": \"\",\n        \"sector_id\": \"\",\n        \"sectorName\": \"\",\n        \"activityName\": \"\",\n        \"physicalUnit\": \"\",\n        \"unitCost\": \"\",\n        \"totalBudget\": \"\",\n        \"noOfBeneficiaries\": \"\",\n        \"LHWRF\": \"\",\n        \"NABARD\": \"\",\n        \"bankLoan\": \"\",\n        \"govtscheme\": \"\",\n        \"directCC\": \"\",\n        \"indirectCC\": \"\",\n        \"other\": \"\",\n        \"remark\": \"\",\n        \"fields\": fields,\n        \"editId\": \"\",\n        \"subActivityDetails\": [],\n        \"availableSubActivity\": [],\n        \"months\": [\"All Months\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\"],\n        \"years\": [2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035],\n\n        /* \"shown\"               : true,*/\n        \"apiCall\": '/api/annualPlans',\n        shown: !this.state.shown\n      });\n      this.props.history.push('/plan');\n    }\n  }\n\n  validateFormReq() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n\n    if (!fields[\"sectorName\"]) {\n      formIsValid = false;\n      errors[\"sectorName\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"activityName\"]) {\n      formIsValid = false;\n      errors[\"activityName\"] = \"This field is required.\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  getLength() {\n    axios.get(this.state.apiCall + '/count').then(response => {\n      // console.log('response', response.data);\n      this.setState({\n        dataCount: response.data.dataLength\n      }, () => {\n        console.log('dataCount', this.state.dataCount);\n      });\n    }).catch(function (error) {});\n  }\n\n  getData(startRange, limitRange) {\n    var data = {\n      startRange: startRange,\n      limitRange: limitRange\n    };\n    axios.post(this.state.apiCall + '/list', data).then(response => {\n      this.setState({\n        tableData: response.data\n      });\n    }).catch(function (error) {\n      console.log(\"error = \", error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.getAvailableSectors();\n    var editId = nextProps.match.params.id;\n\n    if (nextProps.match.params.id) {\n      this.setState({\n        editId: editId,\n        editSectorId: nextProps.match.params.sectorId\n      }, () => {\n        if (this.state.editId && this.state.month == 'All Months') {\n          this.setState({\n            \"months\": [\"All Months\"],\n            \"years\": this.refs.month.value == 'All Months' ? [\"FY 2019 - 2020\", \"FY 2020 - 2021\", \"FY 2021 - 2022\"] : [2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035],\n            \"apiCall\": this.refs.month.value == 'All Months' ? '/api/annualPlans' : '/api/monthlyPlans'\n          });\n        } else if (this.state.editId && this.state.month != 'All Months') {\n          this.setState({\n            \"months\": [\"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\"],\n            \"years\": [2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035],\n            \"apiCall\": this.refs.month.value == 'All Months' ? '/api/annualPlans' : '/api/monthlyPlans'\n          });\n        }\n\n        this.getAvailableActivity(this.state.editSectorId);\n        this.getAvailableSubActivity(this.state.editSectorId);\n        this.edit(this.state.editId);\n      });\n    }\n\n    if (nextProps) {\n      this.getLength();\n    }\n  }\n\n  componentDidMount() {\n    this.getAvailableSectors();\n\n    if (this.state.editId) {\n      this.edit(this.state.editId);\n    }\n\n    this.setState({\n      apiCall: this.refs.month.value == 'All Months' ? '/api/annualPlans' : '/api/monthlyPlans'\n    });\n    this.getLength();\n    this.getData(this.state.startRange, this.state.limitRange);\n    $('.Activityfields').change(function () {\n      $.scrollTo($('#physicalUnit-'), 1200);\n    });\n  }\n\n  getAvailableSectors() {\n    axios({\n      method: 'get',\n      url: '/api/sectors/list'\n    }).then(response => {\n      this.setState({\n        availableSectors: response.data\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  selectSector(event) {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    var sector_ID = event.target.value.split('|')[1];\n    this.setState({\n      sector_ID: sector_ID\n    });\n    this.handleChange(event);\n    this.getAvailableActivity(sector_ID);\n  }\n\n  getAvailableActivity(sector_ID) {\n    axios({\n      method: 'get',\n      url: '/api/sectors/' + sector_ID\n    }).then(response => {\n      this.setState({\n        availableActivity: response.data[0].activity\n      }, () => {});\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  selectActivity(event) {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    var activity_ID = event.target.value.split('|')[1];\n    this.handleChange(event);\n    this.getAvailableSubActivity(this.state.sector_ID, activity_ID);\n  }\n\n  excludeSubmittedSubActivity() {\n    axios({\n      method: 'get',\n      url: this.state.apiCall + '/list'\n    }).then(response => {\n      if (response.data.length > 0) {\n        var submittedSubActivity = response.data.map((a, i) => {\n          return _.pick(a, \"subactivity_ID\", \"month\");\n        });\n\n        var abc = _.pluck(_.compact(submittedSubActivity.map((m, i) => {\n          if (m.month == this.refs.month.value) {\n            return m;\n          }\n        })), \"subactivity_ID\");\n\n        var x = this.state.availableSubActivity.map((a, i) => {\n          if (!abc.includes(a._id)) {\n            return a;\n          }\n        });\n        this.setState({\n          availableSubActivity: _.compact(_.flatten(x))\n        });\n      }\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  getAvailableSubActivity(sector_ID, activity_ID) {\n    axios({\n      method: 'get',\n      url: '/api/sectors/' + sector_ID\n    }).then(response => {\n      var availableSubActivity = _.flatten(response.data.map((a, i) => {\n        return a.activity.map((b, j) => {\n          return b._id == activity_ID ? b.subActivity : [];\n        });\n      }));\n\n      this.setState({\n        availableSubActivity: availableSubActivity\n      });\n      this.excludeSubmittedSubActivity(availableSubActivity);\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  edit(id) {\n    axios({\n      method: 'get',\n      url: this.state.apiCall + '/' + id\n    }).then(response => {\n      var editData = response.data[0];\n      this.getAvailableActivity(editData.sector_ID);\n      this.setState({\n        \"availableSubActivity\": [{\n          _id: editData.subactivity_ID,\n          subActivityName: editData.subactivityName\n        }]\n      }, () => {\n        this.setState({\n          \"shown\": false,\n          \"year\": editData.year,\n          \"month\": editData.month,\n          \"center\": editData.center,\n          \"sectorName\": editData.sectorName + '|' + editData.sector_ID,\n          \"activityName\": editData.activityName + '|' + editData.activity_ID,\n          \"subactivity_ID\": editData.subactivity_ID,\n          \"subActivityDetails\": [{\n            \"subactivity_ID\": editData.subactivity_ID,\n            \"subactivityName\": editData.subactivityName,\n            \"unit\": editData.unit,\n            \"physicalUnit\": editData.physicalUnit,\n            \"unitCost\": editData.unitCost,\n            \"totalBudget\": editData.totalBudget,\n            \"noOfBeneficiaries\": editData.noOfBeneficiaries,\n            \"LHWRF\": editData.LHWRF,\n            \"NABARD\": editData.NABARD,\n            \"bankLoan\": editData.bankLoan,\n            \"govtscheme\": editData.govtscheme,\n            \"directCC\": editData.directCC,\n            \"indirectCC\": editData.indirectCC,\n            \"other\": editData.other,\n            \"remark\": editData.remark\n          }]\n        }, () => {\n          var subActivityDetails = this.state.subActivityDetails[0];\n          Object.entries(subActivityDetails).map(([key, value], i) => {\n            this.setState({\n              [key + '-' + this.state.subactivity_ID]: value\n            });\n          });\n        });\n      });\n    }).catch(function (error) {});\n  }\n\n  toglehidden() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n\n    if (!fields[\"month\"]) {\n      formIsValid = false;\n      errors[\"month\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"year\"]) {\n      formIsValid = false;\n      errors[\"year\"] = \"This field is required.\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n\n    if (this.state.year && this.state.month) {\n      this.setState({\n        shown: !this.state.shown\n      }, () => {\n        console.log('shown', this.state.shown, !this.state.shown);\n      });\n    }\n  }\n\n  getSearchText(searchText, startRange, limitRange) {\n    this.setState({\n      tableData: []\n    });\n  }\n\n  isNumberKey(evt) {\n    var charCode = evt.which ? evt.which : evt.keyCode;\n\n    if (charCode > 31 && (charCode < 48 || charCode > 57) && (charCode < 96 || charCode > 105)) {\n      evt.preventDefault();\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  getAvailableSectors() {\n    axios({\n      method: 'get',\n      url: '/api/centers/list'\n    }).then(response => {\n      this.setState({\n        availableCenters: response.data\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  render() {\n    var shown = {\n      display: this.state.shown ? \"block\" : \"none\"\n    };\n    var hidden = {\n      display: this.state.shown ? \"none\" : \"block\"\n    };\n    console.log(\"availableCenters\", this.state.availableCenters);\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"formWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 titleaddcontact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 contactdeilsmg pageHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723\n      },\n      __self: this\n    }, \"Plan Details\"), React.createElement(\"hr\", {\n      className: \"hr-head container-fluid row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-12 col-sm-12 col-xs-12 formLable boxHeight \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-9 col-lg-offset-1 col-sm-12 col-xs-12 formLable boxHeight \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col-lg-3 col-lg-offset-2 col-md-4 col-sm-6 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"center\",\n      name: \"center\",\n      value: this.state.center,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736\n      },\n      __self: this\n    }, \"-- Select Center --\"), this.state.availableCenters && this.state.availableCenters.length > 0 ? this.state.availableCenters.map((data, index) => {\n      return React.createElement(\"option\", {\n        key: data._id,\n        value: data.centerName + '|' + data._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, data.centerName);\n    }) : null)), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749\n      },\n      __self: this\n    }, this.state.errors.center)), React.createElement(\"div\", {\n      className: \" col-lg-3 col-md-4 col-sm-6 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"month\",\n      name: \"month\",\n      value: this.state.month,\n      onChange: this.selectMonth.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753\n      },\n      __self: this\n    }, this.state.months.map((data, index) => React.createElement(\"option\", {\n      key: index,\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756\n      },\n      __self: this\n    }, data)))), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }, this.state.errors.month)), React.createElement(\"div\", {\n      className: \" col-lg-3 col-md-4 col-sm-6 col-xs-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\",\n      id: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"custom-select form-control inputBox\",\n      ref: \"year\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }, this.state.years.map((data, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769\n        },\n        __self: this\n      }, data);\n    }))), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774\n      },\n      __self: this\n    }, this.state.errors.year))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"AnnualHeadCont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"annualHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957\n      },\n      __self: this\n    }, this.state.month == \"--Quarter 1--\" ? React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961\n      },\n      __self: this\n    }, \"Quarterly Plan for April, May & June\", this.state.year !== \"-- Select Year --\" ? \" - \" + this.state.year : null) : React.createElement(\"h5\", {\n      default: \"Annual Plan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964\n      },\n      __self: this\n    }, this.state.month == \"All Months\" ? \"Annual Plan\" : \"Monthly Plan\" || this.state.month !== \"All Months\" ? \"Monthly Plan\" : \"Annual Plan\", this.state.year !== \"-- Select Year --\" ? \"  \" + (this.state.year ? \"- \" + this.state.year : \"\") : null) // <h5>{this.state.month !== \"Annually\" ? \"Monthly Plan \"+ this.state.month : \"Annual Plan \" }{ this.state.year !==\"-- Select Year --\" ? \"  \"+(this.state.year ? \"- \"+this.state.year :\"\" ) : null}</h5> \n    )), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt formLable boxHeightother \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970\n      },\n      __self: this\n    }, React.createElement(IAssureTable, {\n      tableHeading: this.state.tableHeading,\n      twoLevelHeader: this.state.twoLevelHeader,\n      dataCount: this.state.dataCount,\n      tableData: this.state.tableData,\n      getData: this.getData.bind(this),\n      tableObjects: this.state.tableObjects,\n      getSearchText: this.getSearchText.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nexport default PlanDetails;","map":{"version":3,"sources":["/home/user/REACT PROJECTS/LFMIS/LupinMIS/webApp/admin/src/admin/annualPlan/PlanDetails.js"],"names":["React","Component","$","axios","swal","_","IAssureTable","defaults","baseURL","headers","post","PlanDetails","constructor","props","state","apply","firstHeaderData","heading","mergedColoums","month","year","sectorName","activityName","subactivityName","unit","physicalUnit","unitCost","totalBudget","noOfBeneficiaries","LHWRF","NABARD","bankLoan","govtscheme","directCC","indirectCC","other","remark","actions","deleteMethod","apiLink","paginationApply","searchApply","editUrl","match","params","id","fields","errors","subActivityDetails","apiCall","handleChange","event","target","name","value","setState","validateForm","selectMonth","preventDefault","tableObjects","refs","getData","startRange","limitRange","split","idExist","filter","a","subactivity_ID","length","i","push","document","getElementById","innerHTML","SubmitAnnualPlan","validateFormReq","planValues","then","response","title","data","message","text","catch","error","console","log","Object","entries","map","key","shown","Update","editId","patch","history","formIsValid","scrollTop","getLength","get","dataCount","dataLength","tableData","componentWillReceiveProps","nextProps","getAvailableSectors","editSectorId","sectorId","getAvailableActivity","getAvailableSubActivity","edit","componentDidMount","change","scrollTo","method","url","availableSectors","selectSector","sector_ID","availableActivity","activity","selectActivity","activity_ID","excludeSubmittedSubActivity","submittedSubActivity","pick","abc","pluck","compact","m","x","availableSubActivity","includes","_id","flatten","b","j","subActivity","editData","subActivityName","center","toglehidden","getSearchText","searchText","isNumberKey","evt","charCode","which","keyCode","availableCenters","render","display","hidden","bind","index","centerName","months","years","tableHeading","twoLevelHeader"],"mappings":"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","sourcesContent":["import React, { Component }   from 'react';\nimport $                      from 'jquery';\nimport axios                  from 'axios';\nimport swal                   from 'sweetalert';\nimport _                      from 'underscore';\nimport IAssureTable           from \"../../coreAdmin/IAssureTable/IAssureTable.jsx\";\nimport \"./PlanDetails.css\";\n\naxios.defaults.baseURL = 'http://qalmisapi.iassureit.com';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n\nclass PlanDetails extends Component{\n  \n  constructor(props){\n    super(props); \n    this.state = {\n      \"center\"              :\"\",\n      \"sector_id\"           :\"\",\n      \"sectorName\"          :\"\",\n      \"subActivity\"         :\"\",\n      \"activityName\"        :\"\",\n      \"physicalUnit\"        :\"\",\n      \"unitCost\"            :\"\",\n      \"totalBudget\"         :\"\",\n      \"noOfBeneficiaries\"   :\"\",\n      \"LHWRF\"               :\"\",\n      \"NABARD\"              :\"\",\n      \"bankLoan\"            :\"\",\n      \"govtscheme\"          :\"\",\n      \"directCC\"            :\"\",\n      \"indirectCC\"          :\"\",\n      \"other\"               :\"\",\n      \"remark\"              :\"\",\n      \"shown\"               : true,\n      \"uID\"                 :\"\",\n/*      \"month\"               :\"Annually\",*/ \n      \"heading\"             :\"Monthly Plan\",\n      \"months\"              :[\"All Months\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"January\",\"February\",\"March\"],\n      \"years\"               :[\"FY 2019 - 2020\",\"FY 2020 - 2021\",\"FY 2021 - 2022\"],\n      \"shown\"               : true,\n       \"twoLevelHeader\"     : {\n        apply               : true,\n        firstHeaderData     : [\n                                {\n                                    heading : 'Activity Details',\n                                    mergedColoums : 10\n                                },\n                                {\n                                    heading : 'Source of Fund',\n                                    mergedColoums : 8\n                                },\n                                {\n                                    heading : '',\n                                    mergedColoums : 1\n                                },\n                                {\n                                    heading : '',\n                                    mergedColoums : 1\n                                },\n\n                              ]\n      },\n      \"tableHeading\"        : {\n        month               : \"Month\",\n        year                : \"Year\",\n        sectorName          : \"Sector\",\n        activityName        : \"Activity\",\n        subactivityName     : \"Sub-Activity\",\n        unit                : \"Unit\",\n        physicalUnit        : \"Physical Unit\",\n        unitCost            : \"Unit Cost\",\n        totalBudget         : \"Total Cost\",\n        noOfBeneficiaries   : \"No. Of Beneficiaries\",\n        LHWRF               : \"LHWRF\",\n        NABARD              : \"NABARD\",\n        bankLoan            : \"Bank Loan\",\n        govtscheme          : \"Govt. Scheme\",\n        directCC            : \"Direct Community Contribution\",\n        indirectCC          : \"Indirect Community Contribution\",\n        other               : \"Other\",\n        remark              : \"Remark\",\n        actions             : 'Action',\n      },\n      \"tableObjects\"        : {\n        deleteMethod        : 'delete',\n        apiLink             : '/api/annualPlans/',\n        paginationApply     : true,\n        searchApply         : true,\n        editUrl             : '/plan/',\n      },   \n      \"startRange\"          : 0,\n      \"limitRange\"          : 10,\n      \"editId\"              : this.props.match.params ? this.props.match.params.id : '',\n      fields                : {},\n      errors                : {},\n      subActivityDetails    : [],\n      apiCall               : '/api/annualPlans'\n    }\n  }\n  handleChange(event){\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      [event.target.name] : event.target.value,\n      fields\n    });\n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n  selectMonth(event){\n    event.preventDefault();\n    var tableObjects = this.state.tableObjects;\n    tableObjects[\"apiLink\"] = this.refs.month.value == 'All Months' ? '/api/annualPlans/' : '/api/monthlyPlans/';\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      \"years\"               : this.refs.month.value == 'All Months' ? [\"FY 2019 - 2020\",\"FY 2020 - 2021\",\"FY 2021 - 2022\"] : [2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035],\n      \"month\"               : this.refs.month.value,        \n      \"apiCall\"             : this.refs.month.value == 'All Months' ? '/api/annualPlans' : '/api/monthlyPlans',\n      \"sectorName\"          : \"\",\n      \"activityName\"        : \"\",\n      \"availableSubActivity\": \"\",\n      tableObjects,\n      fields\n    },()=>{\n      this.getData(this.state.startRange, this.state.limitRange);\n    });\n\n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n  subActivityDetails(event){\n    event.preventDefault();\n    let fields = this.state.fields;\n    this.setState({\n      [event.target.name] : event.target.value\n    });\n    if (this.validateForm()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n    var subActivityDetails = this.state.subActivityDetails;\n    var id = (event.target.name).split('-')[1];\n    \n    var idExist = subActivityDetails.filter((a)=>{return a.subactivity_ID == id});\n    var name = (event.target.name).split('-')[0];\n    if(idExist.length > 0){      \n      for(var i=0; i<subActivityDetails.length; i++){\n        if(subActivityDetails[i].subactivity_ID == id){\n          subActivityDetails[i][name] = event.target.value\n        }\n      }\n    }else{\n      subActivityDetails.push({\n        \"subactivity_ID\"      : id,\n        \"subactivityName\"     : document.getElementById('subActivityName-'+id).innerHTML,\n        \"unit\"                : document.getElementById('unit-'+id).innerHTML,\n        [name]                : event.target.value\n\n      })\n    }\n    this.setState({\n      subActivityDetails : subActivityDetails\n    })\n  }\n  SubmitAnnualPlan(event){\n    event.preventDefault();\n    var subActivityDetails = this.state.subActivityDetails;\n    if (this.validateFormReq() &&this.validateForm()) {\n    \n      let fields = {};\n      fields[\"year\"]              = \"\";\n      fields[\"month\"]             = \"\";\n      fields[\"sectorName\"]        = \"\";\n      fields[\"activityName\"]      = \"\";\n      fields[\"physicalUnit\"]      = \"\";\n      fields[\"unitCost\"]          = \"\";\n      fields[\"totalBudget\"]       = \"\";\n      fields[\"noOfBeneficiaries\"] = \"\";\n      fields[\"LHWRF\"]             = \"\";\n      fields[\"NABARD\"]            = \"\";\n      fields[\"bankLoan\"]          = \"\";\n      fields[\"govtscheme\"]        = \"\";\n      fields[\"directCC\"]          = \"\";\n      fields[\"indirectCC\"]        = \"\";\n      fields[\"other\"]             = \"\";\n      fields[\"remark\"]            = \"\";\n      if(subActivityDetails.length > 0){\n        for(var i=0; i<subActivityDetails.length; i++){\n          var planValues = {\n            \"month\"               : this.refs.month.value,          \n            \"year\"                : this.refs.year.value,          \n            \"center_ID\"           : \"P01\",\n            \"center\"              : \"Pune\",\n            \"sector_ID\"           : this.refs.sectorName.value.split('|')[1],\n            \"sectorName\"          : this.refs.sectorName.value.split('|')[0],\n            \"activity_ID\"         : this.refs.activityName.value.split('|')[1],\n            \"activityName\"        : this.refs.activityName.value.split('|')[0],\n            \"subactivity_ID\"      : subActivityDetails[i].subactivity_ID,\n            \"subactivityName\"     : subActivityDetails[i].subactivityName,\n            \"unit\"                : subActivityDetails[i].unit,\n            \"physicalUnit\"        : subActivityDetails[i].physicalUnit,\n            \"unitCost\"            : subActivityDetails[i].unitCost,\n            \"totalBudget\"         : subActivityDetails[i].totalBudget,\n            \"noOfBeneficiaries\"   : subActivityDetails[i].noOfBeneficiaries,\n            \"LHWRF\"               : subActivityDetails[i].LHWRF,\n            \"NABARD\"              : subActivityDetails[i].NABARD,\n            \"bankLoan\"            : subActivityDetails[i].bankLoan,\n            \"govtscheme\"          : subActivityDetails[i].govtscheme,\n            \"directCC\"            : subActivityDetails[i].directCC,\n            \"indirectCC\"          : subActivityDetails[i].indirectCC,\n            \"other\"               : subActivityDetails[i].other,\n            \"remark\"              : subActivityDetails[i].remark,\n          };\n          axios.post(this.state.apiCall, planValues)\n            .then((response)=>{\n              swal({\n                title : response.data.message,\n                text  : response.data.message\n              });\n              this.getData(this.state.startRange, this.state.limitRange);\n            })\n            .catch(function(error){\n              console.log(\"error\"+error);\n          });\n          Object.entries(planValues).map( \n            ([key, value], i)=> {\n              this.setState({\n                [key+'-'+this.state.subactivity_ID] : \"\"\n              })\n            }\n          );\n        }\n      }else{\n        swal({\n          title : \"abc\",\n          text  : \"Please fill atleast one SubActivity Details.\"\n        });\n      }\n      this.setState({\n        \"planValues\"          :\"\",\n        \"year\"                :\"\",\n        \"month\"               :\"\",\n        \"center\"              :\"\",\n        \"sector_id\"           :\"\",\n        \"sectorName\"          :\"\",\n        \"activityName\"        :\"\",\n        \"physicalUnit\"        :\"\",\n        \"unitCost\"            :\"\",\n        \"totalBudget\"         :\"\",\n        \"noOfBeneficiaries\"   :\"\",\n        \"LHWRF\"               :\"\",\n        \"NABARD\"              :\"\",\n        \"bankLoan\"            :\"\",\n        \"govtscheme\"          :\"\",\n        \"directCC\"            :\"\",\n        \"indirectCC\"          :\"\",\n        \"other\"               :\"\",\n        \"remark\"              :\"\",\n        \"fields\"              :fields,\n        \"editId\"              :\"\",\n        \"subActivityDetails\"  :[],\n        \"availableSubActivity\":[],\n        \"availableActivity\"   :[],\n        shown                 : !this.state.shown\n      });\n    }\n  }\n  Update(event){    \n    event.preventDefault();\n    var subActivityDetails = this.state.subActivityDetails;\n    if(this.refs.year.value == \"\" || this.refs.month.value ==\"\" || this.refs.sectorName.value==\"\" || this.refs.activityName.value==\"\" \n      || this.refs.physicalUnit.value==\"\" || this.refs.unitCost.value==\"\" || this.refs.totalBudget.value==\"\" || this.refs.noOfBeneficiaries.value==\"\" \n      || this.refs.LHWRF.value==\"\" || this.refs.NABARD.value==\"\" || this.refs.bankLoan.value==\"\" || this.refs.govtscheme.value==\"\" \n      || this.refs.directCC.value==\"\" || this.refs.indirectCC.value==\"\" || this.refs.other.value==\"\" || this.refs.remark.value==\"\")\n      {\n        if (this.validateFormReq() && this.validateForm()){\n        }\n      }else{\n        \n      let fields = {};\n      fields[\"year\"]              = \"\";\n      fields[\"month\"]             = \"\";\n      fields[\"sectorName\"]        = \"\";\n      fields[\"activityName\"]      = \"\";\n      fields[\"physicalUnit\"]      = \"\";\n      fields[\"unitCost\"]          = \"\";\n      fields[\"totalBudget\"]       = \"\";\n      fields[\"noOfBeneficiaries\"] = \"\";\n      fields[\"LHWRF\"]             = \"\";\n      fields[\"NABARD\"]            = \"\";\n      fields[\"bankLoan\"]          = \"\";\n      fields[\"govtscheme\"]        = \"\";\n      fields[\"directCC\"]          = \"\";\n      fields[\"indirectCC\"]        = \"\";\n      fields[\"other\"]             = \"\";\n      fields[\"remark\"]            = \"\";\n      if(subActivityDetails.length > 0){\n        for(var i=0; i<subActivityDetails.length; i++){\n          var planValues = {\n            \"annualPlan_ID\"       : this.state.editId,\n            \"monthlyPlan_ID\"      : this.state.editId,\n            \"month\"               : this.refs.month.value,          \n            \"year\"                : this.refs.year.value,          \n            \"center_ID\"           : \"P01\",\n            \"center\"              : \"Pune\",\n            \"sector_ID\"           : this.refs.sectorName.value.split('|')[1],\n            \"sectorName\"          : this.refs.sectorName.value.split('|')[0],\n            \"activity_ID\"         : this.refs.activityName.value.split('|')[1],\n            \"activityName\"        : this.refs.activityName.value.split('|')[0],\n            \"subactivity_ID\"      : subActivityDetails[i].subactivity_ID,\n            \"subactivityName\"     : subActivityDetails[i].subactivityName,\n            \"unit\"                : subActivityDetails[i].unit,\n            \"physicalUnit\"        : subActivityDetails[i].physicalUnit,\n            \"unitCost\"            : subActivityDetails[i].unitCost,\n            \"totalBudget\"         : subActivityDetails[i].totalBudget,\n            \"noOfBeneficiaries\"   : subActivityDetails[i].noOfBeneficiaries,\n            \"LHWRF\"               : subActivityDetails[i].LHWRF,\n            \"NABARD\"              : subActivityDetails[i].NABARD,\n            \"bankLoan\"            : subActivityDetails[i].bankLoan,\n            \"govtscheme\"          : subActivityDetails[i].govtscheme,\n            \"directCC\"            : subActivityDetails[i].directCC,\n            \"indirectCC\"          : subActivityDetails[i].indirectCC,\n            \"other\"               : subActivityDetails[i].other,\n            \"remark\"              : subActivityDetails[i].remark,\n          };\n          \n          axios.patch(this.state.apiCall+'/update', planValues)\n            .then((response)=>{\n              swal({\n                title : response.data.message,\n                text  : response.data.message\n              });\n              this.props.history.push('/plan');\n              this.getData(this.state.startRange, this.state.limitRange);\n            })\n            .catch(function(error){\n              console.log(\"error\"+error);\n          });\n          Object.entries(planValues).map( \n            ([key, value], i)=> {\n              this.setState({\n                [key+'-'+this.state.subactivity_ID] : \"\"\n              })\n            }\n          );\n\n        }\n      }\n      \n      this.setState({\n        \"year\"                :\"\",\n        \"month\"               :\"All Months\",\n        \"center\"              :\"\",\n        \"sector_id\"           :\"\",\n        \"sectorName\"          :\"\",\n        \"activityName\"        :\"\",\n        \"physicalUnit\"        :\"\",\n        \"unitCost\"            :\"\",\n        \"totalBudget\"         :\"\",\n        \"noOfBeneficiaries\"   :\"\",\n        \"LHWRF\"               :\"\",\n        \"NABARD\"              :\"\",\n        \"bankLoan\"            :\"\",\n        \"govtscheme\"          :\"\",\n        \"directCC\"            :\"\",\n        \"indirectCC\"          :\"\",\n        \"other\"               :\"\",\n        \"remark\"              :\"\",\n        \"fields\"              :fields,\n        \"editId\"              :\"\",\n        \"subActivityDetails\"  :[],\n        \"availableSubActivity\":[],\n        \"months\"              :[\"All Months\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"January\",\"February\",\"March\"],\n        \"years\"               :[2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035],\n       /* \"shown\"               : true,*/\n        \"apiCall\"             : '/api/annualPlans',\n        shown                 : !this.state.shown\n        \n      });\n      this.props.history.push('/plan');\n    }\n  }\n  validateFormReq() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n\n      if (!fields[\"sectorName\"]) {\n        formIsValid = false;\n        errors[\"sectorName\"] = \"This field is required.\";\n      }     \n      if (!fields[\"activityName\"]) {\n        formIsValid = false;\n        errors[\"activityName\"] = \"This field is required.\";\n      }       \n         \n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n  }\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n  }\n\n  getLength(){\n    axios.get(this.state.apiCall+'/count')\n    .then((response)=>{\n      // console.log('response', response.data);\n      this.setState({\n        dataCount : response.data.dataLength\n      },()=>{\n        console.log('dataCount', this.state.dataCount);\n      })\n    })\n    .catch(function(error){      \n    });\n  }\n  getData(startRange, limitRange){\n    var data = {\n    startRange : startRange,\n    limitRange : limitRange\n    }\n    axios.post(this.state.apiCall+'/list', data)\n      .then((response)=>{\n        this.setState({\n          tableData : response.data\n        });\n      })\n      .catch(function(error){\n        console.log(\"error = \",error);\n      });\n  }\n  componentWillReceiveProps(nextProps){\n    this.getAvailableSectors();\n    var editId = nextProps.match.params.id;\n\n    if(nextProps.match.params.id){\n      this.setState({\n        editId : editId,\n        editSectorId : nextProps.match.params.sectorId\n      },()=>{\n        if(this.state.editId && this.state.month == 'All Months'){\n          this.setState({\n            \"months\"              :[\"All Months\"],\n            \"years\"               : this.refs.month.value == 'All Months' ? [\"FY 2019 - 2020\",\"FY 2020 - 2021\",\"FY 2021 - 2022\"] : [2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035],\n            \"apiCall\"             : this.refs.month.value == 'All Months' ? '/api/annualPlans' : '/api/monthlyPlans',\n          })\n        }else if(this.state.editId && this.state.month != 'All Months'){\n          this.setState({\n            \"months\"              :[\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"January\",\"February\",\"March\"],\n            \"years\"               :[2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035],\n            \"apiCall\"             : this.refs.month.value == 'All Months' ? '/api/annualPlans' : '/api/monthlyPlans',\n          })\n        }\n        this.getAvailableActivity(this.state.editSectorId);\n        this.getAvailableSubActivity(this.state.editSectorId);\n        this.edit(this.state.editId);\n      })    \n    }    \n    if(nextProps){\n      this.getLength();\n    }\n  }\n  componentDidMount() {\n    this.getAvailableSectors();\n    if(this.state.editId){     \n      this.edit(this.state.editId);       \n    }\n    this.setState({\n      apiCall : this.refs.month.value == 'All Months' ? '/api/annualPlans' : '/api/monthlyPlans',\n    })\n    this.getLength();\n    this.getData(this.state.startRange, this.state.limitRange);\n    $('.Activityfields').change(function() {\n      $.scrollTo($('#physicalUnit-'), 1200);\n    });\n  }\n  getAvailableSectors(){\n    axios({\n      method: 'get',\n      url: '/api/sectors/list',\n    }).then((response)=> {\n        \n        this.setState({\n          availableSectors : response.data\n        })\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n  selectSector(event){\n    event.preventDefault();\n    this.setState({[event.target.name]:event.target.value});\n    var sector_ID = event.target.value.split('|')[1];\n    this.setState({\n      sector_ID : sector_ID\n    })\n    this.handleChange(event);\n    this.getAvailableActivity(sector_ID);\n  }\n  getAvailableActivity(sector_ID){\n    axios({\n      method: 'get',\n      url: '/api/sectors/'+sector_ID,\n    }).then((response)=> {\n      \n        this.setState({\n          availableActivity : response.data[0].activity\n        },()=>{\n          \n        })\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n  selectActivity(event){\n    event.preventDefault();\n    this.setState({[event.target.name]:event.target.value});\n    var activity_ID = event.target.value.split('|')[1];\n    this.handleChange(event);\n    this.getAvailableSubActivity(this.state.sector_ID, activity_ID);\n  }\n  excludeSubmittedSubActivity(){\n    axios({\n      method: 'get',\n      url: this.state.apiCall+'/list',\n    }).then((response)=> {\n      if(response.data.length > 0){\n        var submittedSubActivity = response.data.map((a, i)=>{\n          return _.pick(a, \"subactivity_ID\", \"month\")\n        })\n        var abc = _.pluck(_.compact(submittedSubActivity.map((m, i)=> { \n          if(m.month == this.refs.month.value){\n            return m;\n          } \n        })), \"subactivity_ID\");\n\n        var x = this.state.availableSubActivity.map((a, i)=>{\n          if(!abc.includes(a._id)){\n            return a;\n          }\n        });\n\n        this.setState({\n          availableSubActivity : _.compact(_.flatten(x))\n        });\n      }\n    }).catch(function (error) {\n      console.log('error', error);\n    }); \n  }\n  getAvailableSubActivity(sector_ID, activity_ID){\n    axios({\n      method: 'get',\n      url: '/api/sectors/'+sector_ID,\n    }).then((response)=> {\n        var availableSubActivity = _.flatten(response.data.map((a, i)=>{\n            return a.activity.map((b, j)=>{return b._id ==  activity_ID ? b.subActivity : [] \n          });\n        }))\n        this.setState({\n          availableSubActivity : availableSubActivity\n        })\n        this.excludeSubmittedSubActivity(availableSubActivity);\n       \n      \n    }).catch(function (error) {\n      console.log('error', error);\n    }); \n  }\n  edit(id){\n    axios({\n      method: 'get',\n      url: this.state.apiCall+'/'+id,\n      }).then((response)=> {\n      var editData = response.data[0];\n      this.getAvailableActivity(editData.sector_ID);\n      this.setState({\n        \"availableSubActivity\"    : [{\n          _id                     : editData.subactivity_ID,\n          subActivityName         : editData.subactivityName,\n        }],\n      },()=>{\n        this.setState({\n          \"shown\"                   : false,\n          \"year\"                    : editData.year,\n          \"month\"                   : editData.month,\n          \"center\"                  : editData.center,\n          \"sectorName\"              : editData.sectorName+'|'+editData.sector_ID,\n          \"activityName\"            : editData.activityName+'|'+editData.activity_ID,\n          \"subactivity_ID\"          : editData.subactivity_ID,\n          \"subActivityDetails\"      : [{\n              \"subactivity_ID\"      : editData.subactivity_ID,\n              \"subactivityName\"     : editData.subactivityName,\n              \"unit\"                : editData.unit,\n              \"physicalUnit\"        : editData.physicalUnit,\n              \"unitCost\"            : editData.unitCost,\n              \"totalBudget\"         : editData.totalBudget,\n              \"noOfBeneficiaries\"   : editData.noOfBeneficiaries,\n              \"LHWRF\"               : editData.LHWRF,\n              \"NABARD\"              : editData.NABARD,\n              \"bankLoan\"            : editData.bankLoan,\n              \"govtscheme\"          : editData.govtscheme,\n              \"directCC\"            : editData.directCC,\n              \"indirectCC\"          : editData.indirectCC,\n              \"other\"               : editData.other,\n              \"remark\"              : editData.remark,\n          }]\n        },()=>{\n          var subActivityDetails = this.state.subActivityDetails[0];\n          Object.entries(subActivityDetails).map( \n            ([key, value], i)=> {\n              this.setState({\n                [key+'-'+this.state.subactivity_ID] : value\n              })\n            }\n          );\n        });\n      })\n    }).catch(function (error) {\n    });\n  }\n  toglehidden(){\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    $(\"html,body\").scrollTop(0);\n      if (!fields[\"month\"]) {\n        formIsValid = false;\n        errors[\"month\"] = \"This field is required.\";\n      }       \n      if (!fields[\"year\"]) {\n        formIsValid = false;\n        errors[\"year\"] = \"This field is required.\";\n      }       \n      this.setState({\n        errors: errors\n      }); \n\n      if(this.state.year && this.state.month){\n      this.setState({\n       shown: !this.state.shown\n      },()=>{\n        console.log('shown', this.state.shown, !this.state.shown);\n      });      \n    }\n  }\n  getSearchText(searchText, startRange, limitRange){\n    this.setState({\n      tableData : []\n    })\n  }\n\n  isNumberKey(evt){\n    var charCode = (evt.which) ? evt.which : evt.keyCode\n    if (charCode > 31 && (charCode < 48 || charCode > 57)  && (charCode < 96 || charCode > 105))\n    {\n    evt.preventDefault();\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n  getAvailableSectors(){\n    axios({\n      method: 'get',\n      url: '/api/centers/list',\n    }).then((response)=> {\n        \n        this.setState({\n          availableCenters : response.data\n        })\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n \n  render() {\n    var shown = {\n      display: this.state.shown ? \"block\" : \"none\"\n    };\n    \n    var hidden = {\n      display: this.state.shown ? \"none\" : \"block\"\n    }\n  \n                                  console.log(\"availableCenters\",this.state.availableCenters);\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"formWrapper\">\n            <section className=\"content\">\n              <div className=\"\">\n                <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent \">\n                  <div className=\"row\">\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 titleaddcontact\">\n                      <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 contactdeilsmg pageHeader\">\n                          Plan Details                          \n                      </div>\n                      <hr className=\"hr-head container-fluid row\"/>\n                    </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"row\">\n                        <div className=\" col-lg-12 col-sm-12 col-xs-12 formLable boxHeight \">\n                        <div className=\" col-lg-9 col-lg-offset-1 col-sm-12 col-xs-12 formLable boxHeight \">\n                          <div className=\" col-lg-3 col-lg-offset-2 col-md-4 col-sm-6 col-xs-12 \">\n                            <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"center\" >\n                              <select className=\"custom-select form-control inputBox\" ref=\"center\" name=\"center\" value={this.state.center }  onChange={this.handleChange.bind(this)} >\n                                <option className=\"hidden\" >-- Select Center --</option>\n                                {\n                                  this.state.availableCenters && this.state.availableCenters.length >0 ?\n                                  this.state.availableCenters.map((data, index)=>{\n                                    return(\n                                      <option key={data._id} value={data.centerName+'|'+data._id}>{data.centerName}</option>\n                                    );\n                                  })\n                                  :\n                                  null\n                                }\n                              </select>\n                            </div>\n                            <div className=\"errorMsg\">{this.state.errors.center}</div>\n                          </div>\n                          <div className=\" col-lg-3 col-md-4 col-sm-6 col-xs-12 \">\n                            <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"month\" >\n                              <select className=\"custom-select form-control inputBox\" ref=\"month\" name=\"month\" value={this.state.month}  onChange={this.selectMonth.bind(this)} >\n                               {/* <option className=\"hidden\" >-- Select Month --</option>*/}\n                                {this.state.months.map((data,index) =>\n                                <option key={index}  className=\"\" >{data}</option>\n                                )}\n                                \n                              </select>\n                            </div>\n                            <div className=\"errorMsg\">{this.state.errors.month}</div>\n                          </div>\n                          <div className=\" col-lg-3 col-md-4 col-sm-6 col-xs-12 \">\n                            <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"year\" >\n                              <select className=\"custom-select form-control inputBox\" ref=\"year\" name=\"year\" value={this.state.year }  onChange={this.handleChange.bind(this)} >\n                               {/* <option className=\"hidden\" >-- Select Year --</option>*/}\n                               {\n                                this.state.years.map((data, i)=>{\n                                  return <option key={i}>{data}</option>\n                                })\n                               }\n                              </select>\n                            </div>\n                            <div className=\"errorMsg\">{this.state.errors.year}</div>\n                          </div>                          \n                         \n                        </div> \n                        </div> \n                      </div><br/>                      \n                    {/*  <form className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 formLable\"  style={hidden} id=\"Academic_details\">\n                        <div className=\"row\">\n                          <div className=\" col-lg-12 col-sm-12 col-xs-12  validbox \">                \n                            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12 \">\n                              <label className=\"formLable\">Sector</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"sectorName\" >\n                                <select className=\"custom-select form-control inputBox\" ref=\"sectorName\" name=\"sectorName\" value={this.state.sectorName} onChange={this.selectSector.bind(this)}>\n                                  <option  className=\"hidden\" >--Select--</option>\n                                  {\n                                    this.state.availableSectors && this.state.availableSectors.length >0 ?\n                                    this.state.availableSectors.map((data, index)=>{\n                                      return(\n                                        <option key={data._id} value={data.sector+'|'+data._id}>{data.sector}</option>\n                                      );\n                                    })\n                                    :\n                                    null\n                                  }\n                                </select>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.sectorName}</div>\n                            </div>\n                            <div className=\" col-lg-6 col-md-6 col-sm-6 col-xs-12 \">\n                              <label className=\"formLable\">Activity</label><span className=\"asterix\">*</span>\n                              <div className=\"col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id=\"activityName\" >\n                                <select className=\"custom-select form-control inputBox\"ref=\"activityName\" name=\"activityName\" value={this.state.activityName} onChange={this.selectActivity.bind(this)} >\n                                  <option  className=\"hidden\" >-- Select--</option>\n                                  {\n                                  this.state.availableActivity && this.state.availableActivity.length >0 ?\n                                  this.state.availableActivity.map((data, index)=>{\n                                    if(data.activityName ){\n                                      return(\n                                        <option key={data._id} value={data.activityName+'|'+data._id}>{data.activityName}</option>\n                                      );\n                                    }\n                                  })\n                                  :\n                                  null\n                                }\n                                </select>\n                              </div>\n                              <div className=\"errorMsg\">{this.state.errors.activityName}</div>\n                            </div>                  \n                          </div> \n                        </div><br/>  \n                        <div>\n                          {this.state.availableSubActivity ? <hr className=\"hr-head\"/> :\"\"}\n                        </div>                     \n                          {\n                            this.state.availableSubActivity && this.state.availableSubActivity.length >0 ?\n                            this.state.availableSubActivity.map((data, index)=>{\n                              if(data.subActivityName ){\n                                return(\n                                  <div className=\"subActDiv\"  key={data._id}>\n                                    <div className=\" col-lg-3 col-md-1 col-sm-6 col-xs-12 contentDiv  \">\n                                      <label className=\"head\" value={data.subActivityName+'|'+data._id} id={\"subActivityName-\"+data._id}>{data.subActivityName} </label><br/>\n                                      <label className=\"formLable\">Unit :<span id={\"unit-\"+data._id}>{data.unit}</span></label>\n                                     </div>\n                                    <div className=\"col-lg-9 col-sm-10 col-xs-10 \">\n                                      <div className=\"row\">\n                                        <div className=\"col-lg-3 col-md-1 col-sm-6 col-xs-12 Activityfields  \">\n                                          <label className=\"formLable head\">Sub-Activity Details</label>\n                                        </div>\n                                      </div>\n                                      <div className=\" row\">\n                                        <div className=\"col-lg-3 col-md-1 col-sm-6 col-xs-12 Activityfields\">\n                                          <label className=\"formLable\">Physical Units</label>\n                                          <div className=\" input-group inputBox-main \" id={\"physicalUnit-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"physicalUnit-\"+data._id} placeholder=\"\" ref={\"physicalUnit-\"+data._id} value={this.state[\"physicalUnit-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>\n                                        <div className=\" col-lg-3 col-md-1 col-sm-6 col-xs-12 Activityfields\">\n                                          <label className=\"formLable\">Unit Cost</label>\n                                          <div className=\" input-group inputBox-main\" id={\"unitCost-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"unitCost-\"+data._id} placeholder=\"\" ref={\"unitCost\"+\"-\"+data._id} value={this.state[\"unitCost-\"+data._id]} onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>  \n                                        <div className=\" col-lg-3 col-md-1 col-sm-6 col-xs-12 Activityfields\">\n                                          <label className=\"formLable\">Total Cost</label>\n                                          <div className=\"input-group inputBox-main\" id={\"totalBudget-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"totalBudget-\"+data._id} placeholder=\"\" ref={\"totalBudget-\"+data._id} value={this.state[\"totalBudget-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>  \n                                        <div className=\" col-lg-3 col-md-1 col-sm-6 col-xs-12 Activityfields\">\n                                          <label className=\"formLable\">No.of Beneficiaries</label>\n                                          <div className=\" input-group inputBox-main\" id={\"noOfBeneficiaries-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"noOfBeneficiaries-\"+data._id} placeholder=\"\" ref={\"noOfBeneficiaries-\"+data._id} value={this.state[\"noOfBeneficiaries-\"+data._id]} onChange={this.subActivityDetails.bind(this)}/>                              \n                                          </div>\n                                        </div>\n                                      </div>\n                                      <div className=\"row\">\n                                        <div className=\"col-lg-3 col-md-1 col-sm-6 col-xs-12 Activityfields  \">\n                                          <label className=\"formLable head\">Sources of Fund</label>\n                                        </div>\n                                      </div>\n                                      <div className=\"row\">\n                                        <div className=\" col-lg-2 col-md-1 col-sm-6 col-xs-12 planfields\">\n                                          <label className=\"formLable\">LHWRF</label>\n                                          <div className=\" input-group inputBox-main\" id={\"LHWRF-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"LHWRF-\"+data._id} placeholder=\"\" ref={\"LHWRF-\"+data._id} value={this.state[\"LHWRF-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>\n                                        <div className=\" col-lg-2 col-md-1 col-sm-6 col-xs-12 planfields\">\n                                          <label className=\"formLable\">NABARD</label>\n                                          <div className=\" input-group inputBox-main\" id={\"NABARD-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"NABARD-\"+data._id} placeholder=\"\" ref={\"NABARD-\"+data._id} value={this.state[\"NABARD-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>\n                                        <div className=\" col-lg-2 col-md-1 col-sm-6 col-xs-12 planfields\">\n                                          <label className=\"formLable\">Bank Loan</label>\n                                          <div className=\" input-group inputBox-main\" id={\"bankLoan-\"+data._id}>\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"bankLoan-\"+data._id} placeholder=\"\" ref={\"bankLoan-\"+data._id} value={this.state[\"bankLoan-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>\n                                        <div className=\" col-lg-2 col-md-1 col-sm-6 col-xs-12 planfields\">\n                                          <label className=\"formLable\">Govt. Schemes</label>\n                                          <div className=\" input-group inputBox-main\" id={\"govtscheme-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"govtscheme-\"+data._id} placeholder=\"\" ref={\"govtscheme-\"+data._id} value={this.state[\"govtscheme-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>\n                                        <div className=\" col-lg-2 col-md-1 col-sm-6 col-xs-12 planfields\">\n                                          <label className=\"formLable\">Direct Com. Cont.</label>\n                                          <div className=\" input-group inputBox-main\" id={\"directCC-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"directCC-\"+data._id} placeholder=\"\" ref={\"directCC-\"+data._id} value={this.state[\"directCC-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>\n                                        <div className=\" col-lg-2 col-md-1 col-sm-6 col-xs-12 planfields\">\n                                          <label className=\"formLable\">Indirect Com. Cont.</label>\n                                          <div className=\" input-group inputBox-main\" id={\"indirectCC-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"indirectCC-\"+data._id} placeholder=\"\" ref={\"indirectCC-\"+data._id} value={this.state[\"indirectCC-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <div className=\" row\">\n                                        <div className=\" col-lg-2 col-md-1 col-sm-6 col-xs-12 planfields\">\n                                          <label className=\"formLable\">Other</label>\n                                          <div className=\" input-group inputBox-main\" id={\"other-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"other-\"+data._id} placeholder=\"\" ref={\"other-\"+data._id} value={this.state[\"other-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>\n                                        <div className=\" col-lg-10 col-md-10 col-sm-12 col-xs-12 planfields\">\n                                          <label className=\"formLable\">Remark</label>\n                                          <div className=\" col-lg-12 col-sm-12 col-xs-12 input-group inputBox-main\" id={\"remark-\"+data._id} >\n                                            <input type=\"text\" className=\"form-control inputBox nameParts\" name={\"remark-\"+data._id} placeholder=\"Remark\" ref={\"remark-\"+data._id} value={this.state[\"remark-\"+data._id]}  onChange={this.subActivityDetails.bind(this)}/>\n                                          </div>\n                                        </div>\n                                      </div>  \n                                      <div className=\"row\">                            \n                                        <div className=\" col-lg-10 col-lg-offset-2 col-sm-12 col-xs-12  padmi3\">\n                                          <div className=\" col-lg-12 col-md-6 col-sm-6 col-xs-12 padmi3 \">\n                                            <label className=\"formLable\"></label>\n                                            <div className=\"errorMsg\">{this.state.errors.remark}</div>\n                                          </div>\n                                        </div> \n                                      </div><br/>\n                                    </div>  <br/>\n                                  </div>\n                                );\n                              }else{\n                                return <label>Please check either all sub Activity Details are submitted or you don't have sub activity for activity  </label>\n                              }\n                            })\n                            :\n                            null\n                          }                           \n                        <div className=\"col-lg-12\">\n                         <br/>{\n                          this.state.editId ? \n                          <button className=\" col-lg-2 btn submit mt pull-right\" onClick={this.Update.bind(this)}> Update </button>\n                          :\n                          <button className=\" col-lg-2 btn submit mt pull-right\" onClick={this.SubmitAnnualPlan.bind(this)}> Submit </button>\n                        }\n                        </div>\n                      \n                      </form>*/}\n                    </div>\n                    <div className=\"AnnualHeadCont\">\n                      <div className=\"annualHead\">\n                      {\n                        this.state.month==\"--Quarter 1--\"\n                          ?\n                            <h5>Quarterly Plan for April, May & June{this.state.year !==\"-- Select Year --\" ? \" - \"+this.state.year : null}</h5> \n                          :\n\n                            <h5 default=\"Annual Plan\">{this.state.month == \"All Months\" ? \"Annual Plan\": \"Monthly Plan\" || this.state.month !== \"All Months\" ? \"Monthly Plan\": \"Annual Plan\" }{ this.state.year !==\"-- Select Year --\" ? \"  \"+(this.state.year ? \"- \"+this.state.year :\"\" ) : null}</h5> \n                            // <h5>{this.state.month !== \"Annually\" ? \"Monthly Plan \"+ this.state.month : \"Annual Plan \" }{ this.state.year !==\"-- Select Year --\" ? \"  \"+(this.state.year ? \"- \"+this.state.year :\"\" ) : null}</h5> \n                        }\n                      </div>\n                    </div>\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt formLable boxHeightother \" >\n                      <div className=\"row\">  \n                       <IAssureTable \n                          tableHeading={this.state.tableHeading}\n                          twoLevelHeader={this.state.twoLevelHeader} \n                          dataCount={this.state.dataCount}\n                          tableData={this.state.tableData}\n                          getData={this.getData.bind(this)}\n                          tableObjects={this.state.tableObjects}\n                          getSearchText={this.getSearchText.bind(this)}\n                        />\n                      </div>\n                    </div> \n                  </div>\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default PlanDetails\n"]},"metadata":{},"sourceType":"module"}